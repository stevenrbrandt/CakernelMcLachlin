#define PDstandardNth1(u,i,j,k) (p1o2dx*(-vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(0)]) + vec_loadu((u)[index+di*(1)+dj*(0)+dk*(0)])))
#define PDstandardNth2(u,i,j,k) (p1o2dy*(-vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(0)]) + vec_loadu((u)[index+di*(0)+dj*(1)+dk*(0)])))
#define PDstandardNth3(u,i,j,k) (p1o2dz*(-vec_loadu((u)[index+di*(0)+dj*(0)+dk*(-1)]) + vec_loadu((u)[index+di*(0)+dj*(0)+dk*(1)])))
#define PDstandardNth11(u,i,j,k) (p1odx2*(-2*vec_loadu((u)[index+di*(0)+dj*(0)+dk*(0)]) + vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(0)]) + vec_loadu((u)[index+di*(1)+dj*(0)+dk*(0)])))
#define PDstandardNth22(u,i,j,k) (p1ody2*(-2*vec_loadu((u)[index+di*(0)+dj*(0)+dk*(0)]) + vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(0)]) + vec_loadu((u)[index+di*(0)+dj*(1)+dk*(0)])))
#define PDstandardNth33(u,i,j,k) (p1odz2*(-2*vec_loadu((u)[index+di*(0)+dj*(0)+dk*(0)]) + vec_loadu((u)[index+di*(0)+dj*(0)+dk*(-1)]) + vec_loadu((u)[index+di*(0)+dj*(0)+dk*(1)])))
#define PDstandardNth12(u,i,j,k) (p1o4dxdy*(vec_loadu((u)[index+di*(-1)+dj*(-1)+dk*(0)]) - vec_loadu((u)[index+di*(-1)+dj*(1)+dk*(0)]) - vec_loadu((u)[index+di*(1)+dj*(-1)+dk*(0)]) + vec_loadu((u)[index+di*(1)+dj*(1)+dk*(0)])))
#define PDstandardNth13(u,i,j,k) (p1o4dxdz*(vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(-1)]) - vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(1)]) - vec_loadu((u)[index+di*(1)+dj*(0)+dk*(-1)]) + vec_loadu((u)[index+di*(1)+dj*(0)+dk*(1)])))
#define PDstandardNth21(u,i,j,k) (p1o4dxdy*(vec_loadu((u)[index+di*(-1)+dj*(-1)+dk*(0)]) - vec_loadu((u)[index+di*(-1)+dj*(1)+dk*(0)]) - vec_loadu((u)[index+di*(1)+dj*(-1)+dk*(0)]) + vec_loadu((u)[index+di*(1)+dj*(1)+dk*(0)])))
#define PDstandardNth23(u,i,j,k) (p1o4dydz*(vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(-1)]) - vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(1)]) - vec_loadu((u)[index+di*(0)+dj*(1)+dk*(-1)]) + vec_loadu((u)[index+di*(0)+dj*(1)+dk*(1)])))
#define PDstandardNth31(u,i,j,k) (p1o4dxdz*(vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(-1)]) - vec_loadu((u)[index+di*(-1)+dj*(0)+dk*(1)]) - vec_loadu((u)[index+di*(1)+dj*(0)+dk*(-1)]) + vec_loadu((u)[index+di*(1)+dj*(0)+dk*(1)])))
#define PDstandardNth32(u,i,j,k) (p1o4dydz*(vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(-1)]) - vec_loadu((u)[index+di*(0)+dj*(-1)+dk*(1)]) - vec_loadu((u)[index+di*(0)+dj*(1)+dk*(-1)]) + vec_loadu((u)[index+di*(0)+dj*(1)+dk*(1)])))
