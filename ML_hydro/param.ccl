# File produced by Kranc


shares: GenericFD

USES CCTK_INT stencil_width
USES CCTK_INT stencil_width_x
USES CCTK_INT stencil_width_y
USES CCTK_INT stencil_width_z
USES CCTK_INT boundary_width


shares: MethodOfLines

USES CCTK_INT MoL_Num_Evolved_Vars

restricted:
CCTK_INT verbose "verbose"
{
  *:* :: ""
} 0

restricted:
CCTK_REAL h "grid spacing"
{
  "*:*" :: ""
} 0.01

restricted:
CCTK_REAL A "sound wave amplitude"
{
  "*:*" :: ""
} 0.001

restricted:
CCTK_REAL L "sound wave wavelength"
{
  "*:*" :: ""
} 1

restricted:
CCTK_REAL alpha "artificial viscosity coefficient"
{
  "*:*" :: ""
} 0

restricted:
CCTK_REAL Gamma "polytropic exponent"
{
  "*:*" :: ""
} 1.3333333333333333

private:
KEYWORD initial_data "initial_data"
{
  "vacuum" :: "vacuum"
  "sound wave" :: "sound wave"
} "vacuum"

restricted:
CCTK_INT ML_hydro_MaxNumEvolvedVars "Number of evolved variables used by this thorn" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Evolved_Vars
{
  5:5 :: "Number of evolved variables used by this thorn"
} 5

restricted:
CCTK_INT timelevels "Number of active timelevels"
{
  0:3 :: ""
} 3

restricted:
CCTK_INT rhs_timelevels "Number of active RHS timelevels"
{
  0:3 :: ""
} 1

restricted:
CCTK_INT hydro_vacuum_calc_every "hydro_vacuum_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT hydro_soundWave_calc_every "hydro_soundWave_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT hydro_prim2con_calc_every "hydro_prim2con_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT hydro_con2prim_calc_every "hydro_con2prim_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT hydro_RHS_calc_every "hydro_RHS_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT hydro_vacuum_calc_offset "hydro_vacuum_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT hydro_soundWave_calc_offset "hydro_soundWave_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT hydro_prim2con_calc_offset "hydro_prim2con_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT hydro_con2prim_calc_offset "hydro_con2prim_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT hydro_RHS_calc_offset "hydro_RHS_calc_offset"
{
  *:* :: ""
} 0

private:
KEYWORD ene_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD mass_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD mom1_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD mom2_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD mom3_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD ene_group_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "none"

private:
KEYWORD mass_group_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "none"

private:
KEYWORD mom_group_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "none"

private:
CCTK_REAL ene_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mass_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mom1_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mom2_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mom3_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL ene_group_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mass_group_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL mom_group_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL ene_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mass_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mom1_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mom2_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mom3_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL ene_group_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mass_group_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL mom_group_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL ene_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mass_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mom1_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mom2_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mom3_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL ene_group_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mass_group_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL mom_group_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

