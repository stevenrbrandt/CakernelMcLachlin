# File produced by Kranc


if (timelevels == 1)
{
  STORAGE: ML_Jadm[1]
}
if (timelevels == 2)
{
  STORAGE: ML_Jadm[2]
}
if (timelevels == 3)
{
  STORAGE: ML_Jadm[3]
}

if (timelevels == 1)
{
  STORAGE: ML_Madm[1]
}
if (timelevels == 2)
{
  STORAGE: ML_Madm[2]
}
if (timelevels == 3)
{
  STORAGE: ML_Madm[3]
}

schedule ML_ADMQuantities_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_ADMQuantities_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule group ML_ADMQuantities_group in MoL_PseudoEvolution after MoL_PostStep
{
  # no language specified
} "ML_ADMQuantities"

schedule ML_ADMQuantities in ML_ADMQuantities_group
{
  LANG: C
  READS:    ML_BSSN::alpha
  READS:    ML_BSSN::At11
  READS:    ML_BSSN::At12
  READS:    ML_BSSN::At13
  READS:    ML_BSSN::At22
  READS:    ML_BSSN::At23
  READS:    ML_BSSN::At33
  READS:    ML_BSSN::beta1
  READS:    ML_BSSN::beta2
  READS:    ML_BSSN::beta3
  READS:    TmunuBase::eTtt
  READS:    TmunuBase::eTtx
  READS:    TmunuBase::eTty
  READS:    TmunuBase::eTtz
  READS:    TmunuBase::eTxx
  READS:    TmunuBase::eTxy
  READS:    TmunuBase::eTxz
  READS:    TmunuBase::eTyy
  READS:    TmunuBase::eTyz
  READS:    TmunuBase::eTzz
  READS:    ML_BSSN::gt11
  READS:    ML_BSSN::gt12
  READS:    ML_BSSN::gt13
  READS:    ML_BSSN::gt22
  READS:    ML_BSSN::gt23
  READS:    ML_BSSN::gt33
  READS:    ML_BSSN::phi
  READS:    ML_BSSN::trK
  READS:    grid::x
  READS:    ML_BSSN::Xt1
  READS:    ML_BSSN::Xt2
  READS:    ML_BSSN::Xt3
  READS:    grid::y
  READS:    grid::z
  WRITES:   ML_ADMQuantities::Jadm1
  WRITES:   ML_ADMQuantities::Jadm2
  WRITES:   ML_ADMQuantities::Jadm3
  WRITES:   ML_ADMQuantities::Madm
} "ML_ADMQuantities"

schedule ML_ADMQuantities_SelectBCs in ML_ADMQuantities_bc_group
{
  LANG: C
  OPTIONS: level
  SYNC: ML_Jadm
  SYNC: ML_Madm
} "ML_ADMQuantities_SelectBCs"

schedule group ApplyBCs as ML_ADMQuantities_ApplyBCs in ML_ADMQuantities_bc_group after ML_ADMQuantities_SelectBCs
{
  # no language specified
} "Apply BCs for groups set in ML_ADMQuantities"

schedule group ML_ADMQuantities_bc_group in ML_ADMQuantities_group after ML_ADMQuantities
{
  # no language specified
} "ML_ADMQuantities"

schedule group ML_ADMQuantities_bc_group in MoL_PseudoEvolutionBoundaries after MoL_PostStep
{
  # no language specified
} "ML_ADMQuantities"

schedule ML_ADMQuantities_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
} "select boundary conditions"

schedule ML_ADMQuantities_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule ML_ADMQuantities_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule group ApplyBCs as ML_ADMQuantities_ApplyBCs in MoL_PostStep after ML_ADMQuantities_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
