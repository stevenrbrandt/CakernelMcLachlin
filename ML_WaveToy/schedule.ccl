# File produced by Kranc


if (timelevels == 1)
{
  STORAGE: WT_rho[1]
}
if (timelevels == 2)
{
  STORAGE: WT_rho[2]
}

if (timelevels == 1)
{
  STORAGE: WT_u[1]
}
if (timelevels == 2)
{
  STORAGE: WT_u[2]
}

if (rhs_timelevels == 1)
{
  STORAGE: WT_rhorhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: WT_rhorhs[2]
}

if (rhs_timelevels == 1)
{
  STORAGE: WT_urhs[1]
}
if (rhs_timelevels == 2)
{
  STORAGE: WT_urhs[2]
}

schedule ML_WaveToy_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_WaveToy_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"

schedule WT_Gaussian AT initial
{
  LANG: C
  WRITES:   ML_WaveToy::rho
  WRITES:   ML_WaveToy::u
} "WT_Gaussian"

schedule WT_RHS IN MoL_CalcRHS
{
  LANG: C
  READS:    ML_WaveToy::rho
  READS:    ML_WaveToy::u
  WRITES:   ML_WaveToy::rhorhs
  WRITES:   ML_WaveToy::urhs
} "WT_RHS"

schedule WT_RHS AT analysis
{
  LANG: C
  SYNC: WT_rhorhs
  SYNC: WT_urhs
  READS:    ML_WaveToy::rho
  READS:    ML_WaveToy::u
  WRITES:   ML_WaveToy::rhorhs
  WRITES:   ML_WaveToy::urhs
} "WT_RHS"

schedule ML_WaveToy_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: WT_rho
  SYNC: WT_u
} "select boundary conditions"

schedule ML_WaveToy_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule ML_WaveToy_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule group ApplyBCs as ML_WaveToy_ApplyBCs in MoL_PostStep after ML_WaveToy_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
