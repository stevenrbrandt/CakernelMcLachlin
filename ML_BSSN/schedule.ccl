# File produced by Kranc


if (other_timelevels == 1)
{
  STORAGE: ML_cons_detg[1]
}

if (other_timelevels == 1)
{
  STORAGE: ML_cons_Gamma[1]
}

if (other_timelevels == 1)
{
  STORAGE: ML_cons_traceA[1]
}

if (other_timelevels == 1)
{
  STORAGE: ML_Ham[1]
}

if (other_timelevels == 1)
{
  STORAGE: ML_mom[1]
}

if (timelevels == 1)
{
  STORAGE: ML_curv[1]
}

if (timelevels == 1)
{
  STORAGE: ML_dtlapse[1]
}

if (timelevels == 1)
{
  STORAGE: ML_dtshift[1]
}

if (timelevels == 1)
{
  STORAGE: ML_Gamma[1]
}

if (timelevels == 1)
{
  STORAGE: ML_lapse[1]
}

if (timelevels == 1)
{
  STORAGE: ML_log_confac[1]
}

if (timelevels == 1)
{
  STORAGE: ML_metric[1]
}

if (timelevels == 1)
{
  STORAGE: ML_shift[1]
}

if (timelevels == 1)
{
  STORAGE: ML_trace_curv[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_curvrhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_dtlapserhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_dtshiftrhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_Gammarhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_lapserhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_log_confacrhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_metricrhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_shiftrhs[1]
}

if (rhs_timelevels == 1)
{
  STORAGE: ML_trace_curvrhs[1]
}

schedule ML_BSSN_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_BSSN_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule ML_BSSN_RegisterSymmetries in SymmetryRegister
{
  LANG: C
  OPTIONS: meta
} "register symmetries"


if (CCTK_EQUALS(my_initial_data, "Minkowski"))
{
  schedule CAKERNEL_Launch_ML_BSSN_Minkowski at CCTK_INITIAL
  {
    LANG: C
  } "ML_BSSN_Minkowski"
}

schedule CAKERNEL_Launch_ML_BSSN_RHS1 at EVOL
{
  LANG: C
} "ML_BSSN_RHS1"

schedule CAKERNEL_Launch_ML_BSSN_RHS2 at EVOL
{
  LANG: C
} "ML_BSSN_RHS2"


if (CCTK_EQUALS(apply_dissipation, "always"))
{
  schedule CAKERNEL_Launch_ML_BSSN_Dissipation at EVOL AFTER (ML_BSSN_RHS1 ML_BSSN_RHS2)
  {
    LANG: C
  } "ML_BSSN_Dissipation"
}

schedule CAKERNEL_Launch_ML_BSSN_Advect at CCTK_EVOL AFTER (ML_BSSN_RHS1 ML_BSSN_RHS2)
{
  LANG: C
} "ML_BSSN_Advect"

schedule CAKERNEL_Launch_ML_BSSN_enforce IN MoL_PostStepModify
{
  LANG: C
} "ML_BSSN_enforce"

schedule ML_BSSN_SelectBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: ML_curv
  SYNC: ML_dtlapse
  SYNC: ML_dtshift
  SYNC: ML_Gamma
  SYNC: ML_lapse
  SYNC: ML_log_confac
  SYNC: ML_metric
  SYNC: ML_shift
  SYNC: ML_trace_curv
} "select boundary conditions"

schedule ML_BSSN_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule CaKernel_CopyFromDev at ANALYSIS
{
  LANG: C
} "Copy variables from devices"

schedule group ApplyBCs as ML_BSSN_ApplyBCs in MoL_PostStep after ML_BSSN_SelectBoundConds
{
  # no language specified
} "Apply boundary conditions controlled by thorn Boundary"
