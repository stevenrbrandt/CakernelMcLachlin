# File produced by user eschnett
# Produced with Mathematica Version 6.0 for Mac OS X x86 (32-bit) (April 20, 2007)

# Mathematica script written by Ian Hinder and Sascha Husa


STORAGE: cons_detg[1]

STORAGE: cons_Gamma[1]

STORAGE: cons_traceA[1]

STORAGE: Ham[1]

STORAGE: mom[1]

STORAGE: curvrhs[1]

STORAGE: dtlapserhs[1]

STORAGE: dtshiftrhs[1]

STORAGE: Gammarhs[1]

STORAGE: lapserhs[1]

STORAGE: log_confacrhs[1]

STORAGE: metricrhs[1]

STORAGE: shiftrhs[1]

STORAGE: trace_curvrhs[1]

STORAGE: curv[3]

STORAGE: dtlapse[3]

STORAGE: dtshift[3]

STORAGE: Gamma[3]

STORAGE: lapse[3]

STORAGE: log_confac[3]

STORAGE: metric[3]

STORAGE: shift[3]

STORAGE: trace_curv[3]

schedule ML_BSSN_Startup at STARTUP
{
  LANG: C
  OPTIONS: meta
} "create banner"

schedule ML_BSSN_RegisterVars in MoL_Register
{
  LANG: C
  OPTIONS: meta
} "Register Variables for MoL"

schedule ML_BSSN_RegisterSymmetries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "register symmetries"


if (CCTK_EQUALS(my_initial_data, "Minkowski"))
{
  schedule ML_BSSN_Minkowski IN ADMBase_InitialData
  {
    LANG: C
    
  } "ML_BSSN_Minkowski"
}


if (CCTK_EQUALS(my_initial_data, "ADMBase"))
{
  schedule ML_BSSN_convertFromADMBase AT initial AFTER ADMBase_PostInitial
  {
    LANG: C
    
  } "ML_BSSN_convertFromADMBase"
}


if (CCTK_EQUALS(my_initial_data, "ADMBase"))
{
  schedule ML_BSSN_convertFromADMBaseGamma AT initial AFTER ML_BSSN_convertFromADMBase
  {
    LANG: C
    
    SYNC: Gamma
  } "ML_BSSN_convertFromADMBaseGamma"
}

schedule ML_BSSN_RHS IN MoL_CalcRHS
{
  LANG: C
  
} "ML_BSSN_RHS"

schedule ML_BSSN_RHS AT analysis
{
  LANG: C
  
  SYNC: curvrhs
  SYNC: dtlapserhs
  SYNC: dtshiftrhs
  SYNC: Gammarhs
  SYNC: lapserhs
  SYNC: log_confacrhs
  SYNC: metricrhs
  SYNC: shiftrhs
  SYNC: trace_curvrhs
} "ML_BSSN_RHS"

schedule ML_BSSN_enforce IN MoL_PostStep BEFORE ML_BSSN_BoundConds
{
  LANG: C
  
} "ML_BSSN_enforce"

schedule ML_BSSN_convertToADMBase IN MoL_PostStep AFTER ML_BSSN_ApplyBCs AFTER ML_BSSN_enforce
{
  LANG: C
  
} "ML_BSSN_convertToADMBase"

schedule ML_BSSN_constraints AT analysis
{
  LANG: C
  
  SYNC: cons_detg
  SYNC: cons_Gamma
  SYNC: cons_traceA
  SYNC: Ham
  SYNC: mom
} "ML_BSSN_constraints"

schedule ML_BSSN_ApplyBoundConds in MoL_PostStep
{
  LANG: C
  OPTIONS: level
  SYNC: curv
  SYNC: dtlapse
  SYNC: dtshift
  SYNC: Gamma
  SYNC: lapse
  SYNC: log_confac
  SYNC: metric
  SYNC: shift
  SYNC: trace_curv
} "apply boundary conditions"

schedule ML_BSSN_CheckBoundaries at BASEGRID
{
  LANG: C
  OPTIONS: meta
} "check boundaries treatment"

schedule group ApplyBCs as ML_BSSN_ApplyBCs in MoL_PostStep  after ML_BSSN_ApplyBoundConds
{
  # no language specified
  
} "Apply boundary conditions controlled by thorn Boundary"
