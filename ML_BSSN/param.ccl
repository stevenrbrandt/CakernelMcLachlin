# File produced by user eschnett
# Produced with Mathematica Version 6.0 for Mac OS X x86 (32-bit) (April 20, 2007)

# Mathematica script written by Ian Hinder and Sascha Husa


shares: ADMBase

USES CCTK_KEYWORD initial_data


shares: GenericFD

USES CCTK_INT stencil_width
USES CCTK_INT stencil_width_x
USES CCTK_INT stencil_width_y
USES CCTK_INT stencil_width_z
USES CCTK_INT boundary_width


shares: MethodOfLines

USES CCTK_INT MoL_Num_Evolved_Vars
USES CCTK_INT MoL_Num_Constrained_Vars

restricted:
CCTK_REAL verbose "verbose"
{
  "*:*" :: "no restrictions"
} 0

restricted:
CCTK_REAL harmonicF "harmonicF"
{
  "*:*" :: "no restrictions"
} 1

restricted:
CCTK_REAL AlphaDriver "AlphaDriver"
{
  "*:*" :: "no restrictions"
} 0

restricted:
CCTK_REAL ShiftGammaCoeff "ShiftGammaCoeff"
{
  "*:*" :: "no restrictions"
} 0

restricted:
CCTK_REAL BetaDriver "BetaDriver"
{
  "*:*" :: "no restrictions"
} 0

restricted:
CCTK_INT harmonicN "harmonicN"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ShiftAlphaPower "ShiftAlphaPower"
{
  *:* :: "no restrictions"
} 0

private:
KEYWORD my_initial_data "my_initial_data"
{
  "ADMBase" :: "ADMBase"
  "Minkowski" :: "Minkowski"
} "ADMBase"

restricted:
CCTK_INT ML_BSSN_MaxNumEvolvedVars "Number of evolved variables used by this thorn" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Evolved_Vars
{
  25:25 :: "Number of evolved variables used by this thorn"
} 25

restricted:
CCTK_INT ML_BSSN_MaxNumConstrainedVars "Number of constrained variables used by this thorn" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Constrained_Vars
{
  33:33 :: "Number of constrained variables used by this thorn"
} 33

restricted:
CCTK_INT ML_BSSN_Minkowski_calc_every "ML_BSSN_Minkowski_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_convertFromADMBase_calc_every "ML_BSSN_convertFromADMBase_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_convertFromADMBaseGamma_calc_every "ML_BSSN_convertFromADMBaseGamma_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_RHS_calc_every "ML_BSSN_RHS_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_enforce_calc_every "ML_BSSN_enforce_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_convertToADMBase_calc_every "ML_BSSN_convertToADMBase_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_constraints_calc_every "ML_BSSN_constraints_calc_every"
{
  *:* :: "no restrictions"
} 1

restricted:
CCTK_INT ML_BSSN_Minkowski_calc_offset "ML_BSSN_Minkowski_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_convertFromADMBase_calc_offset "ML_BSSN_convertFromADMBase_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_convertFromADMBaseGamma_calc_offset "ML_BSSN_convertFromADMBaseGamma_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_RHS_calc_offset "ML_BSSN_RHS_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_enforce_calc_offset "ML_BSSN_enforce_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_convertToADMBase_calc_offset "ML_BSSN_convertToADMBase_calc_offset"
{
  *:* :: "no restrictions"
} 0

restricted:
CCTK_INT ML_BSSN_constraints_calc_offset "ML_BSSN_constraints_calc_offset"
{
  *:* :: "no restrictions"
} 0

private:
KEYWORD At11_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD At21_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD At31_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD At22_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD At32_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD At33_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtalpha_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtbeta1_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtbeta2_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtbeta3_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD Xt1_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD Xt2_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD Xt3_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD alpha_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD phi_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt11_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt21_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt31_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt22_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt32_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD gt33_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD beta1_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD beta2_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD beta3_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD trK_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD curv_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtlapse_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD dtshift_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD Gamma_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD lapse_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD log_confac_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD metric_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD shift_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD trace_curv_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
CCTK_REAL At11_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At21_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At31_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At22_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At32_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At33_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtalpha_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtbeta1_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtbeta2_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtbeta3_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL Xt1_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL Xt2_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL Xt3_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL alpha_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL phi_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt11_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt21_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt31_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt22_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt32_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL gt33_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL beta1_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL beta2_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL beta3_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL trK_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL curv_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtlapse_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL dtshift_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL Gamma_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL lapse_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL log_confac_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL metric_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL shift_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL trace_curv_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL At11_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At21_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At31_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At22_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At32_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At33_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtalpha_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtbeta1_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtbeta2_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtbeta3_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL Xt1_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL Xt2_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL Xt3_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL alpha_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL phi_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt11_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt21_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt31_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt22_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt32_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL gt33_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL beta1_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL beta2_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL beta3_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL trK_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL curv_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtlapse_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL dtshift_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL Gamma_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL lapse_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL log_confac_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL metric_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL shift_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL trace_curv_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL At11_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL At21_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL At31_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL At22_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL At32_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL At33_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtalpha_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtbeta1_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtbeta2_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtbeta3_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL Xt1_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL Xt2_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL Xt3_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL alpha_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL phi_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt11_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt21_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt31_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt22_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt32_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL gt33_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL beta1_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL beta2_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL beta3_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL trK_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL curv_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtlapse_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL dtshift_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL Gamma_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL lapse_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL log_confac_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL metric_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL shift_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL trace_curv_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

