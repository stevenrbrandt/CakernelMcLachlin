#undef KRANC_DIFF_FUNCTIONS
#define KRANC_C
#include "Differencing.h"
#include "GenericFD.h"

#undef KRANC_GFOFFSET3D
#define KRANC_GFOFFSET3D(u,i,j,k) I3D(u,i,j,k)


/* Define macros used in calculations */
#define INITVALUE (42)
#define QAD(x) (SQR(SQR(x)))
#define INV(x) ((1.0) / (x))
#define SQR(x) ((x) * (x))
#define CUB(x) ((x) * (x) * (x))

CAKERNEL_ML_BSSN_Dissipation_Begin
  
  /* Include user-supplied include files */
  
  /* Initialise finite differencing variables */
  CCTK_REAL const dx = params.cagh_dx;
  CCTK_REAL const dy = params.cagh_dy;
  CCTK_REAL const dz = params.cagh_dz;
  CCTK_REAL const dt = params.cagh_dt;
  CCTK_REAL const t = params.cagh_time;
  CCTK_REAL const dxi = INV(dx);
  CCTK_REAL const dyi = INV(dy);
  CCTK_REAL const dzi = INV(dz);
  CCTK_REAL const khalf = 0.5;
  CCTK_REAL const kthird = 1/3.0;
  CCTK_REAL const ktwothird = 2.0/3.0;
  CCTK_REAL const kfourthird = 4.0/3.0;
  CCTK_REAL const keightthird = 8.0/3.0;
  CCTK_REAL const hdxi = 0.5 * dxi;
  CCTK_REAL const hdyi = 0.5 * dyi;
  CCTK_REAL const hdzi = 0.5 * dzi;
  
  /* Initialize predefined quantities */
  CCTK_REAL const p1o12dx = 0.0833333333333333333333333333333*INV(dx);
  CCTK_REAL const p1o12dy = 0.0833333333333333333333333333333*INV(dy);
  CCTK_REAL const p1o12dz = 0.0833333333333333333333333333333*INV(dz);
  CCTK_REAL const p1o144dxdy = 0.00694444444444444444444444444444*INV(dx)*INV(dy);
  CCTK_REAL const p1o144dxdz = 0.00694444444444444444444444444444*INV(dx)*INV(dz);
  CCTK_REAL const p1o144dydz = 0.00694444444444444444444444444444*INV(dy)*INV(dz);
  CCTK_REAL const p1o24dx = 0.0416666666666666666666666666667*INV(dx);
  CCTK_REAL const p1o24dy = 0.0416666666666666666666666666667*INV(dy);
  CCTK_REAL const p1o24dz = 0.0416666666666666666666666666667*INV(dz);
  CCTK_REAL const p1o64dx = 0.015625*INV(dx);
  CCTK_REAL const p1o64dy = 0.015625*INV(dy);
  CCTK_REAL const p1o64dz = 0.015625*INV(dz);
  CCTK_REAL const p1odx = INV(dx);
  CCTK_REAL const p1ody = INV(dy);
  CCTK_REAL const p1odz = INV(dz);
  CCTK_REAL const pm1o12dx2 = -0.0833333333333333333333333333333*INV(SQR(dx));
  CCTK_REAL const pm1o12dy2 = -0.0833333333333333333333333333333*INV(SQR(dy));
  CCTK_REAL const pm1o12dz2 = -0.0833333333333333333333333333333*INV(SQR(dz));
  
  /* Assign local copies of arrays functions */
  
  
  
  /* Calculate temporaries and arrays functions */
  
  /* Copy local copies back to grid functions */
  CAKERNEL_ML_BSSN_Dissipation_Computations_Begin
    
    /* Assign local copies of grid functions */
    
    CCTK_REAL AL = I3D(A,0,0,0);
    CCTK_REAL alphaL = I3D(alpha,0,0,0);
    CCTK_REAL alpharhsL = I3D(alpharhs,0,0,0);
    CCTK_REAL ArhsL = I3D(Arhs,0,0,0);
    CCTK_REAL At11L = I3D(At11,0,0,0);
    CCTK_REAL At11rhsL = I3D(At11rhs,0,0,0);
    CCTK_REAL At12L = I3D(At12,0,0,0);
    CCTK_REAL At12rhsL = I3D(At12rhs,0,0,0);
    CCTK_REAL At13L = I3D(At13,0,0,0);
    CCTK_REAL At13rhsL = I3D(At13rhs,0,0,0);
    CCTK_REAL At22L = I3D(At22,0,0,0);
    CCTK_REAL At22rhsL = I3D(At22rhs,0,0,0);
    CCTK_REAL At23L = I3D(At23,0,0,0);
    CCTK_REAL At23rhsL = I3D(At23rhs,0,0,0);
    CCTK_REAL At33L = I3D(At33,0,0,0);
    CCTK_REAL At33rhsL = I3D(At33rhs,0,0,0);
    CCTK_REAL B1L = I3D(B1,0,0,0);
    CCTK_REAL B1rhsL = I3D(B1rhs,0,0,0);
    CCTK_REAL B2L = I3D(B2,0,0,0);
    CCTK_REAL B2rhsL = I3D(B2rhs,0,0,0);
    CCTK_REAL B3L = I3D(B3,0,0,0);
    CCTK_REAL B3rhsL = I3D(B3rhs,0,0,0);
    CCTK_REAL beta1L = I3D(beta1,0,0,0);
    CCTK_REAL beta1rhsL = I3D(beta1rhs,0,0,0);
    CCTK_REAL beta2L = I3D(beta2,0,0,0);
    CCTK_REAL beta2rhsL = I3D(beta2rhs,0,0,0);
    CCTK_REAL beta3L = I3D(beta3,0,0,0);
    CCTK_REAL beta3rhsL = I3D(beta3rhs,0,0,0);
    CCTK_REAL gt11L = I3D(gt11,0,0,0);
    CCTK_REAL gt11rhsL = I3D(gt11rhs,0,0,0);
    CCTK_REAL gt12L = I3D(gt12,0,0,0);
    CCTK_REAL gt12rhsL = I3D(gt12rhs,0,0,0);
    CCTK_REAL gt13L = I3D(gt13,0,0,0);
    CCTK_REAL gt13rhsL = I3D(gt13rhs,0,0,0);
    CCTK_REAL gt22L = I3D(gt22,0,0,0);
    CCTK_REAL gt22rhsL = I3D(gt22rhs,0,0,0);
    CCTK_REAL gt23L = I3D(gt23,0,0,0);
    CCTK_REAL gt23rhsL = I3D(gt23rhs,0,0,0);
    CCTK_REAL gt33L = I3D(gt33,0,0,0);
    CCTK_REAL gt33rhsL = I3D(gt33rhs,0,0,0);
    CCTK_REAL phiL = I3D(phi,0,0,0);
    CCTK_REAL phirhsL = I3D(phirhs,0,0,0);
    CCTK_REAL trKL = I3D(trK,0,0,0);
    CCTK_REAL trKrhsL = I3D(trKrhs,0,0,0);
    CCTK_REAL Xt1L = I3D(Xt1,0,0,0);
    CCTK_REAL Xt1rhsL = I3D(Xt1rhs,0,0,0);
    CCTK_REAL Xt2L = I3D(Xt2,0,0,0);
    CCTK_REAL Xt2rhsL = I3D(Xt2rhs,0,0,0);
    CCTK_REAL Xt3L = I3D(Xt3,0,0,0);
    CCTK_REAL Xt3rhsL = I3D(Xt3rhs,0,0,0);
    
    
    /* Include user supplied include files */
    
    /* Precompute derivatives */
    CCTK_REAL const PDdissipationNth1A = PDdissipationNth1(A);
    CCTK_REAL const PDdissipationNth2A = PDdissipationNth2(A);
    CCTK_REAL const PDdissipationNth3A = PDdissipationNth3(A);
    CCTK_REAL const PDdissipationNth1alpha = PDdissipationNth1(alpha);
    CCTK_REAL const PDdissipationNth2alpha = PDdissipationNth2(alpha);
    CCTK_REAL const PDdissipationNth3alpha = PDdissipationNth3(alpha);
    CCTK_REAL const PDdissipationNth1At11 = PDdissipationNth1(At11);
    CCTK_REAL const PDdissipationNth2At11 = PDdissipationNth2(At11);
    CCTK_REAL const PDdissipationNth3At11 = PDdissipationNth3(At11);
    CCTK_REAL const PDdissipationNth1At12 = PDdissipationNth1(At12);
    CCTK_REAL const PDdissipationNth2At12 = PDdissipationNth2(At12);
    CCTK_REAL const PDdissipationNth3At12 = PDdissipationNth3(At12);
    CCTK_REAL const PDdissipationNth1At13 = PDdissipationNth1(At13);
    CCTK_REAL const PDdissipationNth2At13 = PDdissipationNth2(At13);
    CCTK_REAL const PDdissipationNth3At13 = PDdissipationNth3(At13);
    CCTK_REAL const PDdissipationNth1At22 = PDdissipationNth1(At22);
    CCTK_REAL const PDdissipationNth2At22 = PDdissipationNth2(At22);
    CCTK_REAL const PDdissipationNth3At22 = PDdissipationNth3(At22);
    CCTK_REAL const PDdissipationNth1At23 = PDdissipationNth1(At23);
    CCTK_REAL const PDdissipationNth2At23 = PDdissipationNth2(At23);
    CCTK_REAL const PDdissipationNth3At23 = PDdissipationNth3(At23);
    CCTK_REAL const PDdissipationNth1At33 = PDdissipationNth1(At33);
    CCTK_REAL const PDdissipationNth2At33 = PDdissipationNth2(At33);
    CCTK_REAL const PDdissipationNth3At33 = PDdissipationNth3(At33);
    CCTK_REAL const PDdissipationNth1B1 = PDdissipationNth1(B1);
    CCTK_REAL const PDdissipationNth2B1 = PDdissipationNth2(B1);
    CCTK_REAL const PDdissipationNth3B1 = PDdissipationNth3(B1);
    CCTK_REAL const PDdissipationNth1B2 = PDdissipationNth1(B2);
    CCTK_REAL const PDdissipationNth2B2 = PDdissipationNth2(B2);
    CCTK_REAL const PDdissipationNth3B2 = PDdissipationNth3(B2);
    CCTK_REAL const PDdissipationNth1B3 = PDdissipationNth1(B3);
    CCTK_REAL const PDdissipationNth2B3 = PDdissipationNth2(B3);
    CCTK_REAL const PDdissipationNth3B3 = PDdissipationNth3(B3);
    CCTK_REAL const PDdissipationNth1beta1 = PDdissipationNth1(beta1);
    CCTK_REAL const PDdissipationNth2beta1 = PDdissipationNth2(beta1);
    CCTK_REAL const PDdissipationNth3beta1 = PDdissipationNth3(beta1);
    CCTK_REAL const PDdissipationNth1beta2 = PDdissipationNth1(beta2);
    CCTK_REAL const PDdissipationNth2beta2 = PDdissipationNth2(beta2);
    CCTK_REAL const PDdissipationNth3beta2 = PDdissipationNth3(beta2);
    CCTK_REAL const PDdissipationNth1beta3 = PDdissipationNth1(beta3);
    CCTK_REAL const PDdissipationNth2beta3 = PDdissipationNth2(beta3);
    CCTK_REAL const PDdissipationNth3beta3 = PDdissipationNth3(beta3);
    CCTK_REAL const PDdissipationNth1gt11 = PDdissipationNth1(gt11);
    CCTK_REAL const PDdissipationNth2gt11 = PDdissipationNth2(gt11);
    CCTK_REAL const PDdissipationNth3gt11 = PDdissipationNth3(gt11);
    CCTK_REAL const PDdissipationNth1gt12 = PDdissipationNth1(gt12);
    CCTK_REAL const PDdissipationNth2gt12 = PDdissipationNth2(gt12);
    CCTK_REAL const PDdissipationNth3gt12 = PDdissipationNth3(gt12);
    CCTK_REAL const PDdissipationNth1gt13 = PDdissipationNth1(gt13);
    CCTK_REAL const PDdissipationNth2gt13 = PDdissipationNth2(gt13);
    CCTK_REAL const PDdissipationNth3gt13 = PDdissipationNth3(gt13);
    CCTK_REAL const PDdissipationNth1gt22 = PDdissipationNth1(gt22);
    CCTK_REAL const PDdissipationNth2gt22 = PDdissipationNth2(gt22);
    CCTK_REAL const PDdissipationNth3gt22 = PDdissipationNth3(gt22);
    CCTK_REAL const PDdissipationNth1gt23 = PDdissipationNth1(gt23);
    CCTK_REAL const PDdissipationNth2gt23 = PDdissipationNth2(gt23);
    CCTK_REAL const PDdissipationNth3gt23 = PDdissipationNth3(gt23);
    CCTK_REAL const PDdissipationNth1gt33 = PDdissipationNth1(gt33);
    CCTK_REAL const PDdissipationNth2gt33 = PDdissipationNth2(gt33);
    CCTK_REAL const PDdissipationNth3gt33 = PDdissipationNth3(gt33);
    CCTK_REAL const PDdissipationNth1phi = PDdissipationNth1(phi);
    CCTK_REAL const PDdissipationNth2phi = PDdissipationNth2(phi);
    CCTK_REAL const PDdissipationNth3phi = PDdissipationNth3(phi);
    CCTK_REAL const PDdissipationNth1trK = PDdissipationNth1(trK);
    CCTK_REAL const PDdissipationNth2trK = PDdissipationNth2(trK);
    CCTK_REAL const PDdissipationNth3trK = PDdissipationNth3(trK);
    CCTK_REAL const PDdissipationNth1Xt1 = PDdissipationNth1(Xt1);
    CCTK_REAL const PDdissipationNth2Xt1 = PDdissipationNth2(Xt1);
    CCTK_REAL const PDdissipationNth3Xt1 = PDdissipationNth3(Xt1);
    CCTK_REAL const PDdissipationNth1Xt2 = PDdissipationNth1(Xt2);
    CCTK_REAL const PDdissipationNth2Xt2 = PDdissipationNth2(Xt2);
    CCTK_REAL const PDdissipationNth3Xt2 = PDdissipationNth3(Xt2);
    CCTK_REAL const PDdissipationNth1Xt3 = PDdissipationNth1(Xt3);
    CCTK_REAL const PDdissipationNth2Xt3 = PDdissipationNth2(Xt3);
    CCTK_REAL const PDdissipationNth3Xt3 = PDdissipationNth3(Xt3);
    
    /* Calculate temporaries and grid functions */
    CCTK_REAL epsdiss1 = EpsDiss;
    
    CCTK_REAL epsdiss2 = EpsDiss;
    
    CCTK_REAL epsdiss3 = EpsDiss;
    
    phirhsL = phirhsL + epsdiss1*PDdissipationNth1phi + 
      epsdiss2*PDdissipationNth2phi + epsdiss3*PDdissipationNth3phi;
    
    gt11rhsL = gt11rhsL + epsdiss1*PDdissipationNth1gt11 + 
      epsdiss2*PDdissipationNth2gt11 + epsdiss3*PDdissipationNth3gt11;
    
    gt12rhsL = gt12rhsL + epsdiss1*PDdissipationNth1gt12 + 
      epsdiss2*PDdissipationNth2gt12 + epsdiss3*PDdissipationNth3gt12;
    
    gt13rhsL = gt13rhsL + epsdiss1*PDdissipationNth1gt13 + 
      epsdiss2*PDdissipationNth2gt13 + epsdiss3*PDdissipationNth3gt13;
    
    gt22rhsL = gt22rhsL + epsdiss1*PDdissipationNth1gt22 + 
      epsdiss2*PDdissipationNth2gt22 + epsdiss3*PDdissipationNth3gt22;
    
    gt23rhsL = gt23rhsL + epsdiss1*PDdissipationNth1gt23 + 
      epsdiss2*PDdissipationNth2gt23 + epsdiss3*PDdissipationNth3gt23;
    
    gt33rhsL = gt33rhsL + epsdiss1*PDdissipationNth1gt33 + 
      epsdiss2*PDdissipationNth2gt33 + epsdiss3*PDdissipationNth3gt33;
    
    Xt1rhsL = Xt1rhsL + epsdiss1*PDdissipationNth1Xt1 + 
      epsdiss2*PDdissipationNth2Xt1 + epsdiss3*PDdissipationNth3Xt1;
    
    Xt2rhsL = Xt2rhsL + epsdiss1*PDdissipationNth1Xt2 + 
      epsdiss2*PDdissipationNth2Xt2 + epsdiss3*PDdissipationNth3Xt2;
    
    Xt3rhsL = Xt3rhsL + epsdiss1*PDdissipationNth1Xt3 + 
      epsdiss2*PDdissipationNth2Xt3 + epsdiss3*PDdissipationNth3Xt3;
    
    trKrhsL = trKrhsL + epsdiss1*PDdissipationNth1trK + 
      epsdiss2*PDdissipationNth2trK + epsdiss3*PDdissipationNth3trK;
    
    At11rhsL = At11rhsL + epsdiss1*PDdissipationNth1At11 + 
      epsdiss2*PDdissipationNth2At11 + epsdiss3*PDdissipationNth3At11;
    
    At12rhsL = At12rhsL + epsdiss1*PDdissipationNth1At12 + 
      epsdiss2*PDdissipationNth2At12 + epsdiss3*PDdissipationNth3At12;
    
    At13rhsL = At13rhsL + epsdiss1*PDdissipationNth1At13 + 
      epsdiss2*PDdissipationNth2At13 + epsdiss3*PDdissipationNth3At13;
    
    At22rhsL = At22rhsL + epsdiss1*PDdissipationNth1At22 + 
      epsdiss2*PDdissipationNth2At22 + epsdiss3*PDdissipationNth3At22;
    
    At23rhsL = At23rhsL + epsdiss1*PDdissipationNth1At23 + 
      epsdiss2*PDdissipationNth2At23 + epsdiss3*PDdissipationNth3At23;
    
    At33rhsL = At33rhsL + epsdiss1*PDdissipationNth1At33 + 
      epsdiss2*PDdissipationNth2At33 + epsdiss3*PDdissipationNth3At33;
    
    alpharhsL = alpharhsL + epsdiss1*PDdissipationNth1alpha + 
      epsdiss2*PDdissipationNth2alpha + epsdiss3*PDdissipationNth3alpha;
    
    ArhsL = ArhsL + epsdiss1*PDdissipationNth1A + 
      epsdiss2*PDdissipationNth2A + epsdiss3*PDdissipationNth3A;
    
    beta1rhsL = beta1rhsL + epsdiss1*PDdissipationNth1beta1 + 
      epsdiss2*PDdissipationNth2beta1 + epsdiss3*PDdissipationNth3beta1;
    
    beta2rhsL = beta2rhsL + epsdiss1*PDdissipationNth1beta2 + 
      epsdiss2*PDdissipationNth2beta2 + epsdiss3*PDdissipationNth3beta2;
    
    beta3rhsL = beta3rhsL + epsdiss1*PDdissipationNth1beta3 + 
      epsdiss2*PDdissipationNth2beta3 + epsdiss3*PDdissipationNth3beta3;
    
    B1rhsL = B1rhsL + epsdiss1*PDdissipationNth1B1 + 
      epsdiss2*PDdissipationNth2B1 + epsdiss3*PDdissipationNth3B1;
    
    B2rhsL = B2rhsL + epsdiss1*PDdissipationNth1B2 + 
      epsdiss2*PDdissipationNth2B2 + epsdiss3*PDdissipationNth3B2;
    
    B3rhsL = B3rhsL + epsdiss1*PDdissipationNth1B3 + 
      epsdiss2*PDdissipationNth2B3 + epsdiss3*PDdissipationNth3B3;
    
    /* Copy local copies back to grid functions */
    I3D(alpharhs,0,0,0) = alpharhsL;
    I3D(Arhs,0,0,0) = ArhsL;
    I3D(At11rhs,0,0,0) = At11rhsL;
    I3D(At12rhs,0,0,0) = At12rhsL;
    I3D(At13rhs,0,0,0) = At13rhsL;
    I3D(At22rhs,0,0,0) = At22rhsL;
    I3D(At23rhs,0,0,0) = At23rhsL;
    I3D(At33rhs,0,0,0) = At33rhsL;
    I3D(B1rhs,0,0,0) = B1rhsL;
    I3D(B2rhs,0,0,0) = B2rhsL;
    I3D(B3rhs,0,0,0) = B3rhsL;
    I3D(beta1rhs,0,0,0) = beta1rhsL;
    I3D(beta2rhs,0,0,0) = beta2rhsL;
    I3D(beta3rhs,0,0,0) = beta3rhsL;
    I3D(gt11rhs,0,0,0) = gt11rhsL;
    I3D(gt12rhs,0,0,0) = gt12rhsL;
    I3D(gt13rhs,0,0,0) = gt13rhsL;
    I3D(gt22rhs,0,0,0) = gt22rhsL;
    I3D(gt23rhs,0,0,0) = gt23rhsL;
    I3D(gt33rhs,0,0,0) = gt33rhsL;
    I3D(phirhs,0,0,0) = phirhsL;
    I3D(trKrhs,0,0,0) = trKrhsL;
    I3D(Xt1rhs,0,0,0) = Xt1rhsL;
    I3D(Xt2rhs,0,0,0) = Xt2rhsL;
    I3D(Xt3rhs,0,0,0) = Xt3rhsL;
    
  CAKERNEL_ML_BSSN_Dissipation_Computations_End
  
CAKERNEL_ML_BSSN_Dissipation_End
