#undef KRANC_DIFF_FUNCTIONS
#define KRANC_C
#include "Differencing.h"
#include "GenericFD.h"

#undef KRANC_GFOFFSET3D
#define KRANC_GFOFFSET3D(u,i,j,k) I3D(u,i,j,k)


/* Define macros used in calculations */
#define INITVALUE (42)
#define INV(x) ((CCTK_REAL)1.0 / (x))
#define SQR(x) ((x) * (x))
#define CUB(x) ((x) * SQR(x))
#define QAD(x) (SQR(SQR(x)))

CAKERNEL_DEVICE_ML_BSSN_RHSRadiativeBoundary_Begin
  
  /* Include user-supplied include files */
  
  /* Initialise finite differencing variables */
  const CCTK_REAL dx CCTK_ATTRIBUTE_UNUSED = params.cagh_dx;
  const CCTK_REAL dy CCTK_ATTRIBUTE_UNUSED = params.cagh_dy;
  const CCTK_REAL dz CCTK_ATTRIBUTE_UNUSED = params.cagh_dz;
  const CCTK_REAL dt CCTK_ATTRIBUTE_UNUSED = params.cagh_dt;
  const CCTK_REAL t CCTK_ATTRIBUTE_UNUSED = params.cagh_time;
  const CCTK_REAL dxi CCTK_ATTRIBUTE_UNUSED = INV(dx);
  const CCTK_REAL dyi CCTK_ATTRIBUTE_UNUSED = INV(dy);
  const CCTK_REAL dzi CCTK_ATTRIBUTE_UNUSED = INV(dz);
  const CCTK_REAL khalf CCTK_ATTRIBUTE_UNUSED = 0.5;
  const CCTK_REAL kthird CCTK_ATTRIBUTE_UNUSED = 1/3.0;
  const CCTK_REAL ktwothird CCTK_ATTRIBUTE_UNUSED = 2.0/3.0;
  const CCTK_REAL kfourthird CCTK_ATTRIBUTE_UNUSED = 4.0/3.0;
  const CCTK_REAL keightthird CCTK_ATTRIBUTE_UNUSED = 8.0/3.0;
  const CCTK_REAL hdxi CCTK_ATTRIBUTE_UNUSED = 0.5 * dxi;
  const CCTK_REAL hdyi CCTK_ATTRIBUTE_UNUSED = 0.5 * dyi;
  const CCTK_REAL hdzi CCTK_ATTRIBUTE_UNUSED = 0.5 * dzi;
  
  /* Initialize predefined quantities */
  const CCTK_REAL p1o1024dx CCTK_ATTRIBUTE_UNUSED = 0.0009765625*INV(dx);
  const CCTK_REAL p1o1024dy CCTK_ATTRIBUTE_UNUSED = 0.0009765625*INV(dy);
  const CCTK_REAL p1o1024dz CCTK_ATTRIBUTE_UNUSED = 0.0009765625*INV(dz);
  const CCTK_REAL p1o1680dx CCTK_ATTRIBUTE_UNUSED = 0.000595238095238095238095238095238*INV(dx);
  const CCTK_REAL p1o1680dy CCTK_ATTRIBUTE_UNUSED = 0.000595238095238095238095238095238*INV(dy);
  const CCTK_REAL p1o1680dz CCTK_ATTRIBUTE_UNUSED = 0.000595238095238095238095238095238*INV(dz);
  const CCTK_REAL p1o2dx CCTK_ATTRIBUTE_UNUSED = 0.5*INV(dx);
  const CCTK_REAL p1o2dy CCTK_ATTRIBUTE_UNUSED = 0.5*INV(dy);
  const CCTK_REAL p1o2dz CCTK_ATTRIBUTE_UNUSED = 0.5*INV(dz);
  const CCTK_REAL p1o5040dx2 CCTK_ATTRIBUTE_UNUSED = 0.000198412698412698412698412698413*INV(SQR(dx));
  const CCTK_REAL p1o5040dy2 CCTK_ATTRIBUTE_UNUSED = 0.000198412698412698412698412698413*INV(SQR(dy));
  const CCTK_REAL p1o5040dz2 CCTK_ATTRIBUTE_UNUSED = 0.000198412698412698412698412698413*INV(SQR(dz));
  const CCTK_REAL p1o560dx CCTK_ATTRIBUTE_UNUSED = 0.00178571428571428571428571428571*INV(dx);
  const CCTK_REAL p1o560dy CCTK_ATTRIBUTE_UNUSED = 0.00178571428571428571428571428571*INV(dy);
  const CCTK_REAL p1o560dz CCTK_ATTRIBUTE_UNUSED = 0.00178571428571428571428571428571*INV(dz);
  const CCTK_REAL p1o705600dxdy CCTK_ATTRIBUTE_UNUSED = 1.41723356009070294784580498866e-6*INV(dx*dy);
  const CCTK_REAL p1o705600dxdz CCTK_ATTRIBUTE_UNUSED = 1.41723356009070294784580498866e-6*INV(dx*dz);
  const CCTK_REAL p1o705600dydz CCTK_ATTRIBUTE_UNUSED = 1.41723356009070294784580498866e-6*INV(dy*dz);
  const CCTK_REAL p1o840dx CCTK_ATTRIBUTE_UNUSED = 0.00119047619047619047619047619048*INV(dx);
  const CCTK_REAL p1o840dy CCTK_ATTRIBUTE_UNUSED = 0.00119047619047619047619047619048*INV(dy);
  const CCTK_REAL p1o840dz CCTK_ATTRIBUTE_UNUSED = 0.00119047619047619047619047619048*INV(dz);
  const CCTK_REAL p1odx CCTK_ATTRIBUTE_UNUSED = INV(dx);
  const CCTK_REAL p1ody CCTK_ATTRIBUTE_UNUSED = INV(dy);
  const CCTK_REAL p1odz CCTK_ATTRIBUTE_UNUSED = INV(dz);
  const CCTK_REAL pm1o2dx CCTK_ATTRIBUTE_UNUSED = -0.5*INV(dx);
  const CCTK_REAL pm1o2dy CCTK_ATTRIBUTE_UNUSED = -0.5*INV(dy);
  const CCTK_REAL pm1o2dz CCTK_ATTRIBUTE_UNUSED = -0.5*INV(dz);
  const CCTK_REAL pm1o840dx CCTK_ATTRIBUTE_UNUSED = -0.00119047619047619047619047619048*INV(dx);
  const CCTK_REAL pm1o840dy CCTK_ATTRIBUTE_UNUSED = -0.00119047619047619047619047619048*INV(dy);
  const CCTK_REAL pm1o840dz CCTK_ATTRIBUTE_UNUSED = -0.00119047619047619047619047619048*INV(dz);
  
  /* Assign local copies of arrays functions */
  
  
  
  /* Calculate temporaries and arrays functions */
  
  /* Copy local copies back to grid functions */
  
  /* Assign local copies of grid functions */
  
  CCTK_REAL AL CCTK_ATTRIBUTE_UNUSED = I3D(A,0,0,0);
  CCTK_REAL alphaL CCTK_ATTRIBUTE_UNUSED = I3D(alpha,0,0,0);
  CCTK_REAL At11L CCTK_ATTRIBUTE_UNUSED = I3D(At11,0,0,0);
  CCTK_REAL At12L CCTK_ATTRIBUTE_UNUSED = I3D(At12,0,0,0);
  CCTK_REAL At13L CCTK_ATTRIBUTE_UNUSED = I3D(At13,0,0,0);
  CCTK_REAL At22L CCTK_ATTRIBUTE_UNUSED = I3D(At22,0,0,0);
  CCTK_REAL At23L CCTK_ATTRIBUTE_UNUSED = I3D(At23,0,0,0);
  CCTK_REAL At33L CCTK_ATTRIBUTE_UNUSED = I3D(At33,0,0,0);
  CCTK_REAL B1L CCTK_ATTRIBUTE_UNUSED = I3D(B1,0,0,0);
  CCTK_REAL B2L CCTK_ATTRIBUTE_UNUSED = I3D(B2,0,0,0);
  CCTK_REAL B3L CCTK_ATTRIBUTE_UNUSED = I3D(B3,0,0,0);
  CCTK_REAL beta1L CCTK_ATTRIBUTE_UNUSED = I3D(beta1,0,0,0);
  CCTK_REAL beta2L CCTK_ATTRIBUTE_UNUSED = I3D(beta2,0,0,0);
  CCTK_REAL beta3L CCTK_ATTRIBUTE_UNUSED = I3D(beta3,0,0,0);
  CCTK_REAL gt11L CCTK_ATTRIBUTE_UNUSED = I3D(gt11,0,0,0);
  CCTK_REAL gt12L CCTK_ATTRIBUTE_UNUSED = I3D(gt12,0,0,0);
  CCTK_REAL gt13L CCTK_ATTRIBUTE_UNUSED = I3D(gt13,0,0,0);
  CCTK_REAL gt22L CCTK_ATTRIBUTE_UNUSED = I3D(gt22,0,0,0);
  CCTK_REAL gt23L CCTK_ATTRIBUTE_UNUSED = I3D(gt23,0,0,0);
  CCTK_REAL gt33L CCTK_ATTRIBUTE_UNUSED = I3D(gt33,0,0,0);
  CCTK_REAL phiL CCTK_ATTRIBUTE_UNUSED = I3D(phi,0,0,0);
  CCTK_REAL rCopyL CCTK_ATTRIBUTE_UNUSED = I3D(rCopy,0,0,0);
  CCTK_REAL trKL CCTK_ATTRIBUTE_UNUSED = I3D(trK,0,0,0);
  CCTK_REAL xCopyL CCTK_ATTRIBUTE_UNUSED = I3D(xCopy,0,0,0);
  CCTK_REAL Xt1L CCTK_ATTRIBUTE_UNUSED = I3D(Xt1,0,0,0);
  CCTK_REAL Xt2L CCTK_ATTRIBUTE_UNUSED = I3D(Xt2,0,0,0);
  CCTK_REAL Xt3L CCTK_ATTRIBUTE_UNUSED = I3D(Xt3,0,0,0);
  CCTK_REAL yCopyL CCTK_ATTRIBUTE_UNUSED = I3D(yCopy,0,0,0);
  CCTK_REAL zCopyL CCTK_ATTRIBUTE_UNUSED = I3D(zCopy,0,0,0);
  
  
  /* Include user supplied include files */
  
  /* Precompute derivatives */
  const CCTK_REAL PDstandard2nd1A CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(A);
  const CCTK_REAL PDstandard2nd2A CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(A);
  const CCTK_REAL PDstandard2nd3A CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(A);
  const CCTK_REAL PDonesidedPlus2nd1A CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(A);
  const CCTK_REAL PDonesidedMinus2nd1A CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(A);
  const CCTK_REAL PDonesidedPlus2nd2A CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(A);
  const CCTK_REAL PDonesidedMinus2nd2A CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(A);
  const CCTK_REAL PDonesidedPlus2nd3A CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(A);
  const CCTK_REAL PDonesidedMinus2nd3A CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(A);
  const CCTK_REAL PDstandard2nd1alpha CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(alpha);
  const CCTK_REAL PDstandard2nd2alpha CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(alpha);
  const CCTK_REAL PDstandard2nd3alpha CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(alpha);
  const CCTK_REAL PDonesidedPlus2nd1alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(alpha);
  const CCTK_REAL PDonesidedMinus2nd1alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(alpha);
  const CCTK_REAL PDonesidedPlus2nd2alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(alpha);
  const CCTK_REAL PDonesidedMinus2nd2alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(alpha);
  const CCTK_REAL PDonesidedPlus2nd3alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(alpha);
  const CCTK_REAL PDonesidedMinus2nd3alpha CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(alpha);
  const CCTK_REAL PDstandard2nd1At11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At11);
  const CCTK_REAL PDstandard2nd2At11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At11);
  const CCTK_REAL PDstandard2nd3At11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At11);
  const CCTK_REAL PDonesidedPlus2nd1At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At11);
  const CCTK_REAL PDonesidedMinus2nd1At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At11);
  const CCTK_REAL PDonesidedPlus2nd2At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At11);
  const CCTK_REAL PDonesidedMinus2nd2At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At11);
  const CCTK_REAL PDonesidedPlus2nd3At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At11);
  const CCTK_REAL PDonesidedMinus2nd3At11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At11);
  const CCTK_REAL PDstandard2nd1At12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At12);
  const CCTK_REAL PDstandard2nd2At12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At12);
  const CCTK_REAL PDstandard2nd3At12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At12);
  const CCTK_REAL PDonesidedPlus2nd1At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At12);
  const CCTK_REAL PDonesidedMinus2nd1At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At12);
  const CCTK_REAL PDonesidedPlus2nd2At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At12);
  const CCTK_REAL PDonesidedMinus2nd2At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At12);
  const CCTK_REAL PDonesidedPlus2nd3At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At12);
  const CCTK_REAL PDonesidedMinus2nd3At12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At12);
  const CCTK_REAL PDstandard2nd1At13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At13);
  const CCTK_REAL PDstandard2nd2At13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At13);
  const CCTK_REAL PDstandard2nd3At13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At13);
  const CCTK_REAL PDonesidedPlus2nd1At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At13);
  const CCTK_REAL PDonesidedMinus2nd1At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At13);
  const CCTK_REAL PDonesidedPlus2nd2At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At13);
  const CCTK_REAL PDonesidedMinus2nd2At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At13);
  const CCTK_REAL PDonesidedPlus2nd3At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At13);
  const CCTK_REAL PDonesidedMinus2nd3At13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At13);
  const CCTK_REAL PDstandard2nd1At22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At22);
  const CCTK_REAL PDstandard2nd2At22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At22);
  const CCTK_REAL PDstandard2nd3At22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At22);
  const CCTK_REAL PDonesidedPlus2nd1At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At22);
  const CCTK_REAL PDonesidedMinus2nd1At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At22);
  const CCTK_REAL PDonesidedPlus2nd2At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At22);
  const CCTK_REAL PDonesidedMinus2nd2At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At22);
  const CCTK_REAL PDonesidedPlus2nd3At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At22);
  const CCTK_REAL PDonesidedMinus2nd3At22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At22);
  const CCTK_REAL PDstandard2nd1At23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At23);
  const CCTK_REAL PDstandard2nd2At23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At23);
  const CCTK_REAL PDstandard2nd3At23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At23);
  const CCTK_REAL PDonesidedPlus2nd1At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At23);
  const CCTK_REAL PDonesidedMinus2nd1At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At23);
  const CCTK_REAL PDonesidedPlus2nd2At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At23);
  const CCTK_REAL PDonesidedMinus2nd2At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At23);
  const CCTK_REAL PDonesidedPlus2nd3At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At23);
  const CCTK_REAL PDonesidedMinus2nd3At23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At23);
  const CCTK_REAL PDstandard2nd1At33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(At33);
  const CCTK_REAL PDstandard2nd2At33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(At33);
  const CCTK_REAL PDstandard2nd3At33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(At33);
  const CCTK_REAL PDonesidedPlus2nd1At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(At33);
  const CCTK_REAL PDonesidedMinus2nd1At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(At33);
  const CCTK_REAL PDonesidedPlus2nd2At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(At33);
  const CCTK_REAL PDonesidedMinus2nd2At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(At33);
  const CCTK_REAL PDonesidedPlus2nd3At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(At33);
  const CCTK_REAL PDonesidedMinus2nd3At33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(At33);
  const CCTK_REAL PDstandard2nd1B1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(B1);
  const CCTK_REAL PDstandard2nd2B1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(B1);
  const CCTK_REAL PDstandard2nd3B1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(B1);
  const CCTK_REAL PDonesidedPlus2nd1B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(B1);
  const CCTK_REAL PDonesidedMinus2nd1B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(B1);
  const CCTK_REAL PDonesidedPlus2nd2B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(B1);
  const CCTK_REAL PDonesidedMinus2nd2B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(B1);
  const CCTK_REAL PDonesidedPlus2nd3B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(B1);
  const CCTK_REAL PDonesidedMinus2nd3B1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(B1);
  const CCTK_REAL PDstandard2nd1B2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(B2);
  const CCTK_REAL PDstandard2nd2B2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(B2);
  const CCTK_REAL PDstandard2nd3B2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(B2);
  const CCTK_REAL PDonesidedPlus2nd1B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(B2);
  const CCTK_REAL PDonesidedMinus2nd1B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(B2);
  const CCTK_REAL PDonesidedPlus2nd2B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(B2);
  const CCTK_REAL PDonesidedMinus2nd2B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(B2);
  const CCTK_REAL PDonesidedPlus2nd3B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(B2);
  const CCTK_REAL PDonesidedMinus2nd3B2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(B2);
  const CCTK_REAL PDstandard2nd1B3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(B3);
  const CCTK_REAL PDstandard2nd2B3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(B3);
  const CCTK_REAL PDstandard2nd3B3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(B3);
  const CCTK_REAL PDonesidedPlus2nd1B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(B3);
  const CCTK_REAL PDonesidedMinus2nd1B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(B3);
  const CCTK_REAL PDonesidedPlus2nd2B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(B3);
  const CCTK_REAL PDonesidedMinus2nd2B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(B3);
  const CCTK_REAL PDonesidedPlus2nd3B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(B3);
  const CCTK_REAL PDonesidedMinus2nd3B3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(B3);
  const CCTK_REAL PDstandard2nd1beta1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(beta1);
  const CCTK_REAL PDstandard2nd2beta1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(beta1);
  const CCTK_REAL PDstandard2nd3beta1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(beta1);
  const CCTK_REAL PDonesidedPlus2nd1beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(beta1);
  const CCTK_REAL PDonesidedMinus2nd1beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(beta1);
  const CCTK_REAL PDonesidedPlus2nd2beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(beta1);
  const CCTK_REAL PDonesidedMinus2nd2beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(beta1);
  const CCTK_REAL PDonesidedPlus2nd3beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(beta1);
  const CCTK_REAL PDonesidedMinus2nd3beta1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(beta1);
  const CCTK_REAL PDstandard2nd1beta2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(beta2);
  const CCTK_REAL PDstandard2nd2beta2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(beta2);
  const CCTK_REAL PDstandard2nd3beta2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(beta2);
  const CCTK_REAL PDonesidedPlus2nd1beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(beta2);
  const CCTK_REAL PDonesidedMinus2nd1beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(beta2);
  const CCTK_REAL PDonesidedPlus2nd2beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(beta2);
  const CCTK_REAL PDonesidedMinus2nd2beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(beta2);
  const CCTK_REAL PDonesidedPlus2nd3beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(beta2);
  const CCTK_REAL PDonesidedMinus2nd3beta2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(beta2);
  const CCTK_REAL PDstandard2nd1beta3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(beta3);
  const CCTK_REAL PDstandard2nd2beta3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(beta3);
  const CCTK_REAL PDstandard2nd3beta3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(beta3);
  const CCTK_REAL PDonesidedPlus2nd1beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(beta3);
  const CCTK_REAL PDonesidedMinus2nd1beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(beta3);
  const CCTK_REAL PDonesidedPlus2nd2beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(beta3);
  const CCTK_REAL PDonesidedMinus2nd2beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(beta3);
  const CCTK_REAL PDonesidedPlus2nd3beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(beta3);
  const CCTK_REAL PDonesidedMinus2nd3beta3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(beta3);
  const CCTK_REAL PDstandard2nd1gt11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt11);
  const CCTK_REAL PDstandard2nd2gt11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt11);
  const CCTK_REAL PDstandard2nd3gt11 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt11);
  const CCTK_REAL PDonesidedPlus2nd1gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt11);
  const CCTK_REAL PDonesidedMinus2nd1gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt11);
  const CCTK_REAL PDonesidedPlus2nd2gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt11);
  const CCTK_REAL PDonesidedMinus2nd2gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt11);
  const CCTK_REAL PDonesidedPlus2nd3gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt11);
  const CCTK_REAL PDonesidedMinus2nd3gt11 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt11);
  const CCTK_REAL PDstandard2nd1gt12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt12);
  const CCTK_REAL PDstandard2nd2gt12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt12);
  const CCTK_REAL PDstandard2nd3gt12 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt12);
  const CCTK_REAL PDonesidedPlus2nd1gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt12);
  const CCTK_REAL PDonesidedMinus2nd1gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt12);
  const CCTK_REAL PDonesidedPlus2nd2gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt12);
  const CCTK_REAL PDonesidedMinus2nd2gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt12);
  const CCTK_REAL PDonesidedPlus2nd3gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt12);
  const CCTK_REAL PDonesidedMinus2nd3gt12 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt12);
  const CCTK_REAL PDstandard2nd1gt13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt13);
  const CCTK_REAL PDstandard2nd2gt13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt13);
  const CCTK_REAL PDstandard2nd3gt13 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt13);
  const CCTK_REAL PDonesidedPlus2nd1gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt13);
  const CCTK_REAL PDonesidedMinus2nd1gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt13);
  const CCTK_REAL PDonesidedPlus2nd2gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt13);
  const CCTK_REAL PDonesidedMinus2nd2gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt13);
  const CCTK_REAL PDonesidedPlus2nd3gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt13);
  const CCTK_REAL PDonesidedMinus2nd3gt13 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt13);
  const CCTK_REAL PDstandard2nd1gt22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt22);
  const CCTK_REAL PDstandard2nd2gt22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt22);
  const CCTK_REAL PDstandard2nd3gt22 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt22);
  const CCTK_REAL PDonesidedPlus2nd1gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt22);
  const CCTK_REAL PDonesidedMinus2nd1gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt22);
  const CCTK_REAL PDonesidedPlus2nd2gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt22);
  const CCTK_REAL PDonesidedMinus2nd2gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt22);
  const CCTK_REAL PDonesidedPlus2nd3gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt22);
  const CCTK_REAL PDonesidedMinus2nd3gt22 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt22);
  const CCTK_REAL PDstandard2nd1gt23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt23);
  const CCTK_REAL PDstandard2nd2gt23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt23);
  const CCTK_REAL PDstandard2nd3gt23 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt23);
  const CCTK_REAL PDonesidedPlus2nd1gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt23);
  const CCTK_REAL PDonesidedMinus2nd1gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt23);
  const CCTK_REAL PDonesidedPlus2nd2gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt23);
  const CCTK_REAL PDonesidedMinus2nd2gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt23);
  const CCTK_REAL PDonesidedPlus2nd3gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt23);
  const CCTK_REAL PDonesidedMinus2nd3gt23 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt23);
  const CCTK_REAL PDstandard2nd1gt33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(gt33);
  const CCTK_REAL PDstandard2nd2gt33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(gt33);
  const CCTK_REAL PDstandard2nd3gt33 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(gt33);
  const CCTK_REAL PDonesidedPlus2nd1gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(gt33);
  const CCTK_REAL PDonesidedMinus2nd1gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(gt33);
  const CCTK_REAL PDonesidedPlus2nd2gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(gt33);
  const CCTK_REAL PDonesidedMinus2nd2gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(gt33);
  const CCTK_REAL PDonesidedPlus2nd3gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(gt33);
  const CCTK_REAL PDonesidedMinus2nd3gt33 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(gt33);
  const CCTK_REAL PDstandard2nd1phi CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(phi);
  const CCTK_REAL PDstandard2nd2phi CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(phi);
  const CCTK_REAL PDstandard2nd3phi CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(phi);
  const CCTK_REAL PDonesidedPlus2nd1phi CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(phi);
  const CCTK_REAL PDonesidedMinus2nd1phi CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(phi);
  const CCTK_REAL PDonesidedPlus2nd2phi CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(phi);
  const CCTK_REAL PDonesidedMinus2nd2phi CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(phi);
  const CCTK_REAL PDonesidedPlus2nd3phi CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(phi);
  const CCTK_REAL PDonesidedMinus2nd3phi CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(phi);
  const CCTK_REAL PDstandard2nd1trK CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(trK);
  const CCTK_REAL PDstandard2nd2trK CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(trK);
  const CCTK_REAL PDstandard2nd3trK CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(trK);
  const CCTK_REAL PDonesidedPlus2nd1trK CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(trK);
  const CCTK_REAL PDonesidedMinus2nd1trK CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(trK);
  const CCTK_REAL PDonesidedPlus2nd2trK CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(trK);
  const CCTK_REAL PDonesidedMinus2nd2trK CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(trK);
  const CCTK_REAL PDonesidedPlus2nd3trK CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(trK);
  const CCTK_REAL PDonesidedMinus2nd3trK CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(trK);
  const CCTK_REAL PDstandard2nd1Xt1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(Xt1);
  const CCTK_REAL PDstandard2nd2Xt1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(Xt1);
  const CCTK_REAL PDstandard2nd3Xt1 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(Xt1);
  const CCTK_REAL PDonesidedPlus2nd1Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(Xt1);
  const CCTK_REAL PDonesidedMinus2nd1Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(Xt1);
  const CCTK_REAL PDonesidedPlus2nd2Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(Xt1);
  const CCTK_REAL PDonesidedMinus2nd2Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(Xt1);
  const CCTK_REAL PDonesidedPlus2nd3Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(Xt1);
  const CCTK_REAL PDonesidedMinus2nd3Xt1 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(Xt1);
  const CCTK_REAL PDstandard2nd1Xt2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(Xt2);
  const CCTK_REAL PDstandard2nd2Xt2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(Xt2);
  const CCTK_REAL PDstandard2nd3Xt2 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(Xt2);
  const CCTK_REAL PDonesidedPlus2nd1Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(Xt2);
  const CCTK_REAL PDonesidedMinus2nd1Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(Xt2);
  const CCTK_REAL PDonesidedPlus2nd2Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(Xt2);
  const CCTK_REAL PDonesidedMinus2nd2Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(Xt2);
  const CCTK_REAL PDonesidedPlus2nd3Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(Xt2);
  const CCTK_REAL PDonesidedMinus2nd3Xt2 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(Xt2);
  const CCTK_REAL PDstandard2nd1Xt3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd1(Xt3);
  const CCTK_REAL PDstandard2nd2Xt3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd2(Xt3);
  const CCTK_REAL PDstandard2nd3Xt3 CCTK_ATTRIBUTE_UNUSED = PDstandard2nd3(Xt3);
  const CCTK_REAL PDonesidedPlus2nd1Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd1(Xt3);
  const CCTK_REAL PDonesidedMinus2nd1Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd1(Xt3);
  const CCTK_REAL PDonesidedPlus2nd2Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd2(Xt3);
  const CCTK_REAL PDonesidedMinus2nd2Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd2(Xt3);
  const CCTK_REAL PDonesidedPlus2nd3Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedPlus2nd3(Xt3);
  const CCTK_REAL PDonesidedMinus2nd3Xt3 CCTK_ATTRIBUTE_UNUSED = PDonesidedMinus2nd3(Xt3);
  
  /* Calculate temporaries and grid functions */
  CCTK_REAL rn1 CCTK_ATTRIBUTE_UNUSED = -(xCopyL*INV(rCopyL));
  
  CCTK_REAL rn2 CCTK_ATTRIBUTE_UNUSED = -(yCopyL*INV(rCopyL));
  
  CCTK_REAL rn3 CCTK_ATTRIBUTE_UNUSED = -(zCopyL*INV(rCopyL));
  
  CCTK_REAL phi0 CCTK_ATTRIBUTE_UNUSED = IfThen(conformalMethod,1,0);
  
  CCTK_REAL v0 CCTK_ATTRIBUTE_UNUSED = sqrt(ToReal(harmonicF));
  
  CCTK_REAL phirhsL CCTK_ATTRIBUTE_UNUSED = v0*(-phiL + phi0 + 
    rCopyL*(rn1*IfThen(bound_x < 0,PDonesidedPlus2nd1phi,IfThen(bound_x > 
    0,PDonesidedMinus2nd1phi,PDstandard2nd1phi)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2phi,IfThen(bound_y > 
    0,PDonesidedMinus2nd2phi,PDstandard2nd2phi)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3phi,IfThen(bound_z > 
    0,PDonesidedMinus2nd3phi,PDstandard2nd3phi))))*INV(rCopyL);
  
  CCTK_REAL gt11rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt11,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt11,PDstandard2nd1gt11)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt11,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt11,PDstandard2nd2gt11)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt11,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt11,PDstandard2nd3gt11)) + (1 - 
    gt11L)*INV(rCopyL);
  
  CCTK_REAL gt12rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt12,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt12,PDstandard2nd1gt12)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt12,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt12,PDstandard2nd2gt12)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt12,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt12,PDstandard2nd3gt12)) - gt12L*INV(rCopyL);
  
  CCTK_REAL gt13rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt13,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt13,PDstandard2nd1gt13)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt13,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt13,PDstandard2nd2gt13)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt13,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt13,PDstandard2nd3gt13)) - gt13L*INV(rCopyL);
  
  CCTK_REAL gt22rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt22,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt22,PDstandard2nd1gt22)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt22,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt22,PDstandard2nd2gt22)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt22,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt22,PDstandard2nd3gt22)) + (1 - 
    gt22L)*INV(rCopyL);
  
  CCTK_REAL gt23rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt23,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt23,PDstandard2nd1gt23)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt23,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt23,PDstandard2nd2gt23)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt23,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt23,PDstandard2nd3gt23)) - gt23L*INV(rCopyL);
  
  CCTK_REAL gt33rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt33,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt33,PDstandard2nd1gt33)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt33,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt33,PDstandard2nd2gt33)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt33,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt33,PDstandard2nd3gt33)) + (1 - 
    gt33L)*INV(rCopyL);
  
  CCTK_REAL trKrhsL CCTK_ATTRIBUTE_UNUSED = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1trK,IfThen(bound_x > 
    0,PDonesidedMinus2nd1trK,PDstandard2nd1trK)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2trK,IfThen(bound_y > 
    0,PDonesidedMinus2nd2trK,PDstandard2nd2trK)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3trK,IfThen(bound_z > 
    0,PDonesidedMinus2nd3trK,PDstandard2nd3trK)) - trKL*INV(rCopyL));
  
  CCTK_REAL At11rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At11,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At11,PDstandard2nd1At11)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At11,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At11,PDstandard2nd2At11)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At11,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At11,PDstandard2nd3At11)) - At11L*INV(rCopyL);
  
  CCTK_REAL At12rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At12,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At12,PDstandard2nd1At12)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At12,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At12,PDstandard2nd2At12)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At12,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At12,PDstandard2nd3At12)) - At12L*INV(rCopyL);
  
  CCTK_REAL At13rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At13,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At13,PDstandard2nd1At13)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At13,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At13,PDstandard2nd2At13)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At13,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At13,PDstandard2nd3At13)) - At13L*INV(rCopyL);
  
  CCTK_REAL At22rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At22,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At22,PDstandard2nd1At22)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At22,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At22,PDstandard2nd2At22)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At22,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At22,PDstandard2nd3At22)) - At22L*INV(rCopyL);
  
  CCTK_REAL At23rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At23,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At23,PDstandard2nd1At23)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At23,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At23,PDstandard2nd2At23)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At23,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At23,PDstandard2nd3At23)) - At23L*INV(rCopyL);
  
  CCTK_REAL At33rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At33,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At33,PDstandard2nd1At33)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At33,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At33,PDstandard2nd2At33)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At33,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At33,PDstandard2nd3At33)) - At33L*INV(rCopyL);
  
  CCTK_REAL Xt1rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt1,PDstandard2nd1Xt1)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt1,PDstandard2nd2Xt1)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt1,PDstandard2nd3Xt1)) - Xt1L*INV(rCopyL);
  
  CCTK_REAL Xt2rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt2,PDstandard2nd1Xt2)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt2,PDstandard2nd2Xt2)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt2,PDstandard2nd3Xt2)) - Xt2L*INV(rCopyL);
  
  CCTK_REAL Xt3rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt3,PDstandard2nd1Xt3)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt3,PDstandard2nd2Xt3)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt3,PDstandard2nd3Xt3)) - Xt3L*INV(rCopyL);
  
  CCTK_REAL alpharhsL CCTK_ATTRIBUTE_UNUSED = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1alpha,IfThen(bound_x > 
    0,PDonesidedMinus2nd1alpha,PDstandard2nd1alpha)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2alpha,IfThen(bound_y > 
    0,PDonesidedMinus2nd2alpha,PDstandard2nd2alpha)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3alpha,IfThen(bound_z > 
    0,PDonesidedMinus2nd3alpha,PDstandard2nd3alpha)) + (1 - 
    alphaL)*INV(rCopyL));
  
  CCTK_REAL ArhsL CCTK_ATTRIBUTE_UNUSED = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1A,IfThen(bound_x > 
    0,PDonesidedMinus2nd1A,PDstandard2nd1A)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2A,IfThen(bound_y > 
    0,PDonesidedMinus2nd2A,PDstandard2nd2A)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3A,IfThen(bound_z > 
    0,PDonesidedMinus2nd3A,PDstandard2nd3A)) - AL*INV(rCopyL));
  
  CCTK_REAL beta1rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta1,PDstandard2nd1beta1)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2beta1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta1,PDstandard2nd2beta1)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3beta1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta1,PDstandard2nd3beta1)) - beta1L*INV(rCopyL);
  
  CCTK_REAL beta2rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta2,PDstandard2nd1beta2)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2beta2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta2,PDstandard2nd2beta2)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3beta2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta2,PDstandard2nd3beta2)) - beta2L*INV(rCopyL);
  
  CCTK_REAL beta3rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta3,PDstandard2nd1beta3)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2beta3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta3,PDstandard2nd2beta3)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3beta3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta3,PDstandard2nd3beta3)) - beta3L*INV(rCopyL);
  
  CCTK_REAL B1rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B1,PDstandard2nd1B1)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B1,PDstandard2nd2B1)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B1,PDstandard2nd3B1)) - B1L*INV(rCopyL);
  
  CCTK_REAL B2rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B2,PDstandard2nd1B2)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B2,PDstandard2nd2B2)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B2,PDstandard2nd3B2)) - B2L*INV(rCopyL);
  
  CCTK_REAL B3rhsL CCTK_ATTRIBUTE_UNUSED = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B3,PDstandard2nd1B3)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B3,PDstandard2nd2B3)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B3,PDstandard2nd3B3)) - B3L*INV(rCopyL);
  
  /* Copy local copies back to grid functions */
  I3D(alpharhs,0,0,0) = alpharhsL;
  I3D(Arhs,0,0,0) = ArhsL;
  I3D(At11rhs,0,0,0) = At11rhsL;
  I3D(At12rhs,0,0,0) = At12rhsL;
  I3D(At13rhs,0,0,0) = At13rhsL;
  I3D(At22rhs,0,0,0) = At22rhsL;
  I3D(At23rhs,0,0,0) = At23rhsL;
  I3D(At33rhs,0,0,0) = At33rhsL;
  I3D(B1rhs,0,0,0) = B1rhsL;
  I3D(B2rhs,0,0,0) = B2rhsL;
  I3D(B3rhs,0,0,0) = B3rhsL;
  I3D(beta1rhs,0,0,0) = beta1rhsL;
  I3D(beta2rhs,0,0,0) = beta2rhsL;
  I3D(beta3rhs,0,0,0) = beta3rhsL;
  I3D(gt11rhs,0,0,0) = gt11rhsL;
  I3D(gt12rhs,0,0,0) = gt12rhsL;
  I3D(gt13rhs,0,0,0) = gt13rhsL;
  I3D(gt22rhs,0,0,0) = gt22rhsL;
  I3D(gt23rhs,0,0,0) = gt23rhsL;
  I3D(gt33rhs,0,0,0) = gt33rhsL;
  I3D(phirhs,0,0,0) = phirhsL;
  I3D(trKrhs,0,0,0) = trKrhsL;
  I3D(Xt1rhs,0,0,0) = Xt1rhsL;
  I3D(Xt2rhs,0,0,0) = Xt2rhsL;
  I3D(Xt3rhs,0,0,0) = Xt3rhsL;
  
CAKERNEL_DEVICE_ML_BSSN_RHSRadiativeBoundary_End
