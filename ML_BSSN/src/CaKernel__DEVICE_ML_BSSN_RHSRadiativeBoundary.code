#undef KRANC_DIFF_FUNCTIONS
#define KRANC_C
#include "Differencing.h"
#include "GenericFD.h"

#undef KRANC_GFOFFSET3D
#define KRANC_GFOFFSET3D(u,i,j,k) I3D(u,i,j,k)


/* Define macros used in calculations */
#define INITVALUE (42)
#define INV(x) ((CCTK_REAL)1.0 / (x))
#define SQR(x) ((x) * (x))
#define CUB(x) ((x) * SQR(x))
#define QAD(x) (SQR(SQR(x)))

CAKERNEL_DEVICE_ML_BSSN_RHSRadiativeBoundary_Begin
  
  /* Include user-supplied include files */
  
  /* Initialise finite differencing variables */
  CCTK_REAL const dx = params.cagh_dx;
  CCTK_REAL const dy = params.cagh_dy;
  CCTK_REAL const dz = params.cagh_dz;
  CCTK_REAL const dt = params.cagh_dt;
  CCTK_REAL const t = params.cagh_time;
  CCTK_REAL const dxi = INV(dx);
  CCTK_REAL const dyi = INV(dy);
  CCTK_REAL const dzi = INV(dz);
  CCTK_REAL const khalf = 0.5;
  CCTK_REAL const kthird = 1/3.0;
  CCTK_REAL const ktwothird = 2.0/3.0;
  CCTK_REAL const kfourthird = 4.0/3.0;
  CCTK_REAL const keightthird = 8.0/3.0;
  CCTK_REAL const hdxi = 0.5 * dxi;
  CCTK_REAL const hdyi = 0.5 * dyi;
  CCTK_REAL const hdzi = 0.5 * dzi;
  
  /* Initialize predefined quantities */
  CCTK_REAL const p1o1024dx = 0.0009765625*INV(dx);
  CCTK_REAL const p1o1024dy = 0.0009765625*INV(dy);
  CCTK_REAL const p1o1024dz = 0.0009765625*INV(dz);
  CCTK_REAL const p1o1680dx = 0.000595238095238095238095238095238*INV(dx);
  CCTK_REAL const p1o1680dy = 0.000595238095238095238095238095238*INV(dy);
  CCTK_REAL const p1o1680dz = 0.000595238095238095238095238095238*INV(dz);
  CCTK_REAL const p1o2dx = 0.5*INV(dx);
  CCTK_REAL const p1o2dy = 0.5*INV(dy);
  CCTK_REAL const p1o2dz = 0.5*INV(dz);
  CCTK_REAL const p1o5040dx2 = 0.000198412698412698412698412698413*INV(SQR(dx));
  CCTK_REAL const p1o5040dy2 = 0.000198412698412698412698412698413*INV(SQR(dy));
  CCTK_REAL const p1o5040dz2 = 0.000198412698412698412698412698413*INV(SQR(dz));
  CCTK_REAL const p1o560dx = 0.00178571428571428571428571428571*INV(dx);
  CCTK_REAL const p1o560dy = 0.00178571428571428571428571428571*INV(dy);
  CCTK_REAL const p1o560dz = 0.00178571428571428571428571428571*INV(dz);
  CCTK_REAL const p1o705600dxdy = 1.41723356009070294784580498866e-6*INV(dx*dy);
  CCTK_REAL const p1o705600dxdz = 1.41723356009070294784580498866e-6*INV(dx*dz);
  CCTK_REAL const p1o705600dydz = 1.41723356009070294784580498866e-6*INV(dy*dz);
  CCTK_REAL const p1o840dx = 0.00119047619047619047619047619048*INV(dx);
  CCTK_REAL const p1o840dy = 0.00119047619047619047619047619048*INV(dy);
  CCTK_REAL const p1o840dz = 0.00119047619047619047619047619048*INV(dz);
  CCTK_REAL const p1odx = INV(dx);
  CCTK_REAL const p1ody = INV(dy);
  CCTK_REAL const p1odz = INV(dz);
  CCTK_REAL const pm1o2dx = -0.5*INV(dx);
  CCTK_REAL const pm1o2dy = -0.5*INV(dy);
  CCTK_REAL const pm1o2dz = -0.5*INV(dz);
  CCTK_REAL const pm1o840dx = -0.00119047619047619047619047619048*INV(dx);
  CCTK_REAL const pm1o840dy = -0.00119047619047619047619047619048*INV(dy);
  CCTK_REAL const pm1o840dz = -0.00119047619047619047619047619048*INV(dz);
  
  /* Assign local copies of arrays functions */
  
  
  
  /* Calculate temporaries and arrays functions */
  
  /* Copy local copies back to grid functions */
  
  /* Assign local copies of grid functions */
  
  CCTK_REAL AL = I3D(A,0,0,0);
  CCTK_REAL alphaL = I3D(alpha,0,0,0);
  CCTK_REAL At11L = I3D(At11,0,0,0);
  CCTK_REAL At12L = I3D(At12,0,0,0);
  CCTK_REAL At13L = I3D(At13,0,0,0);
  CCTK_REAL At22L = I3D(At22,0,0,0);
  CCTK_REAL At23L = I3D(At23,0,0,0);
  CCTK_REAL At33L = I3D(At33,0,0,0);
  CCTK_REAL B1L = I3D(B1,0,0,0);
  CCTK_REAL B2L = I3D(B2,0,0,0);
  CCTK_REAL B3L = I3D(B3,0,0,0);
  CCTK_REAL beta1L = I3D(beta1,0,0,0);
  CCTK_REAL beta2L = I3D(beta2,0,0,0);
  CCTK_REAL beta3L = I3D(beta3,0,0,0);
  CCTK_REAL gt11L = I3D(gt11,0,0,0);
  CCTK_REAL gt12L = I3D(gt12,0,0,0);
  CCTK_REAL gt13L = I3D(gt13,0,0,0);
  CCTK_REAL gt22L = I3D(gt22,0,0,0);
  CCTK_REAL gt23L = I3D(gt23,0,0,0);
  CCTK_REAL gt33L = I3D(gt33,0,0,0);
  CCTK_REAL phiL = I3D(phi,0,0,0);
  CCTK_REAL rCopyL = I3D(rCopy,0,0,0);
  CCTK_REAL trKL = I3D(trK,0,0,0);
  CCTK_REAL xCopyL = I3D(xCopy,0,0,0);
  CCTK_REAL Xt1L = I3D(Xt1,0,0,0);
  CCTK_REAL Xt2L = I3D(Xt2,0,0,0);
  CCTK_REAL Xt3L = I3D(Xt3,0,0,0);
  CCTK_REAL yCopyL = I3D(yCopy,0,0,0);
  CCTK_REAL zCopyL = I3D(zCopy,0,0,0);
  
  
  /* Include user supplied include files */
  
  /* Precompute derivatives */
  CCTK_REAL const PDstandard2nd1A = PDstandard2nd1(A);
  CCTK_REAL const PDstandard2nd2A = PDstandard2nd2(A);
  CCTK_REAL const PDstandard2nd3A = PDstandard2nd3(A);
  CCTK_REAL const PDonesidedPlus2nd1A = PDonesidedPlus2nd1(A);
  CCTK_REAL const PDonesidedMinus2nd1A = PDonesidedMinus2nd1(A);
  CCTK_REAL const PDonesidedPlus2nd2A = PDonesidedPlus2nd2(A);
  CCTK_REAL const PDonesidedMinus2nd2A = PDonesidedMinus2nd2(A);
  CCTK_REAL const PDonesidedPlus2nd3A = PDonesidedPlus2nd3(A);
  CCTK_REAL const PDonesidedMinus2nd3A = PDonesidedMinus2nd3(A);
  CCTK_REAL const PDstandard2nd1alpha = PDstandard2nd1(alpha);
  CCTK_REAL const PDstandard2nd2alpha = PDstandard2nd2(alpha);
  CCTK_REAL const PDstandard2nd3alpha = PDstandard2nd3(alpha);
  CCTK_REAL const PDonesidedPlus2nd1alpha = PDonesidedPlus2nd1(alpha);
  CCTK_REAL const PDonesidedMinus2nd1alpha = PDonesidedMinus2nd1(alpha);
  CCTK_REAL const PDonesidedPlus2nd2alpha = PDonesidedPlus2nd2(alpha);
  CCTK_REAL const PDonesidedMinus2nd2alpha = PDonesidedMinus2nd2(alpha);
  CCTK_REAL const PDonesidedPlus2nd3alpha = PDonesidedPlus2nd3(alpha);
  CCTK_REAL const PDonesidedMinus2nd3alpha = PDonesidedMinus2nd3(alpha);
  CCTK_REAL const PDstandard2nd1At11 = PDstandard2nd1(At11);
  CCTK_REAL const PDstandard2nd2At11 = PDstandard2nd2(At11);
  CCTK_REAL const PDstandard2nd3At11 = PDstandard2nd3(At11);
  CCTK_REAL const PDonesidedPlus2nd1At11 = PDonesidedPlus2nd1(At11);
  CCTK_REAL const PDonesidedMinus2nd1At11 = PDonesidedMinus2nd1(At11);
  CCTK_REAL const PDonesidedPlus2nd2At11 = PDonesidedPlus2nd2(At11);
  CCTK_REAL const PDonesidedMinus2nd2At11 = PDonesidedMinus2nd2(At11);
  CCTK_REAL const PDonesidedPlus2nd3At11 = PDonesidedPlus2nd3(At11);
  CCTK_REAL const PDonesidedMinus2nd3At11 = PDonesidedMinus2nd3(At11);
  CCTK_REAL const PDstandard2nd1At12 = PDstandard2nd1(At12);
  CCTK_REAL const PDstandard2nd2At12 = PDstandard2nd2(At12);
  CCTK_REAL const PDstandard2nd3At12 = PDstandard2nd3(At12);
  CCTK_REAL const PDonesidedPlus2nd1At12 = PDonesidedPlus2nd1(At12);
  CCTK_REAL const PDonesidedMinus2nd1At12 = PDonesidedMinus2nd1(At12);
  CCTK_REAL const PDonesidedPlus2nd2At12 = PDonesidedPlus2nd2(At12);
  CCTK_REAL const PDonesidedMinus2nd2At12 = PDonesidedMinus2nd2(At12);
  CCTK_REAL const PDonesidedPlus2nd3At12 = PDonesidedPlus2nd3(At12);
  CCTK_REAL const PDonesidedMinus2nd3At12 = PDonesidedMinus2nd3(At12);
  CCTK_REAL const PDstandard2nd1At13 = PDstandard2nd1(At13);
  CCTK_REAL const PDstandard2nd2At13 = PDstandard2nd2(At13);
  CCTK_REAL const PDstandard2nd3At13 = PDstandard2nd3(At13);
  CCTK_REAL const PDonesidedPlus2nd1At13 = PDonesidedPlus2nd1(At13);
  CCTK_REAL const PDonesidedMinus2nd1At13 = PDonesidedMinus2nd1(At13);
  CCTK_REAL const PDonesidedPlus2nd2At13 = PDonesidedPlus2nd2(At13);
  CCTK_REAL const PDonesidedMinus2nd2At13 = PDonesidedMinus2nd2(At13);
  CCTK_REAL const PDonesidedPlus2nd3At13 = PDonesidedPlus2nd3(At13);
  CCTK_REAL const PDonesidedMinus2nd3At13 = PDonesidedMinus2nd3(At13);
  CCTK_REAL const PDstandard2nd1At22 = PDstandard2nd1(At22);
  CCTK_REAL const PDstandard2nd2At22 = PDstandard2nd2(At22);
  CCTK_REAL const PDstandard2nd3At22 = PDstandard2nd3(At22);
  CCTK_REAL const PDonesidedPlus2nd1At22 = PDonesidedPlus2nd1(At22);
  CCTK_REAL const PDonesidedMinus2nd1At22 = PDonesidedMinus2nd1(At22);
  CCTK_REAL const PDonesidedPlus2nd2At22 = PDonesidedPlus2nd2(At22);
  CCTK_REAL const PDonesidedMinus2nd2At22 = PDonesidedMinus2nd2(At22);
  CCTK_REAL const PDonesidedPlus2nd3At22 = PDonesidedPlus2nd3(At22);
  CCTK_REAL const PDonesidedMinus2nd3At22 = PDonesidedMinus2nd3(At22);
  CCTK_REAL const PDstandard2nd1At23 = PDstandard2nd1(At23);
  CCTK_REAL const PDstandard2nd2At23 = PDstandard2nd2(At23);
  CCTK_REAL const PDstandard2nd3At23 = PDstandard2nd3(At23);
  CCTK_REAL const PDonesidedPlus2nd1At23 = PDonesidedPlus2nd1(At23);
  CCTK_REAL const PDonesidedMinus2nd1At23 = PDonesidedMinus2nd1(At23);
  CCTK_REAL const PDonesidedPlus2nd2At23 = PDonesidedPlus2nd2(At23);
  CCTK_REAL const PDonesidedMinus2nd2At23 = PDonesidedMinus2nd2(At23);
  CCTK_REAL const PDonesidedPlus2nd3At23 = PDonesidedPlus2nd3(At23);
  CCTK_REAL const PDonesidedMinus2nd3At23 = PDonesidedMinus2nd3(At23);
  CCTK_REAL const PDstandard2nd1At33 = PDstandard2nd1(At33);
  CCTK_REAL const PDstandard2nd2At33 = PDstandard2nd2(At33);
  CCTK_REAL const PDstandard2nd3At33 = PDstandard2nd3(At33);
  CCTK_REAL const PDonesidedPlus2nd1At33 = PDonesidedPlus2nd1(At33);
  CCTK_REAL const PDonesidedMinus2nd1At33 = PDonesidedMinus2nd1(At33);
  CCTK_REAL const PDonesidedPlus2nd2At33 = PDonesidedPlus2nd2(At33);
  CCTK_REAL const PDonesidedMinus2nd2At33 = PDonesidedMinus2nd2(At33);
  CCTK_REAL const PDonesidedPlus2nd3At33 = PDonesidedPlus2nd3(At33);
  CCTK_REAL const PDonesidedMinus2nd3At33 = PDonesidedMinus2nd3(At33);
  CCTK_REAL const PDstandard2nd1B1 = PDstandard2nd1(B1);
  CCTK_REAL const PDstandard2nd2B1 = PDstandard2nd2(B1);
  CCTK_REAL const PDstandard2nd3B1 = PDstandard2nd3(B1);
  CCTK_REAL const PDonesidedPlus2nd1B1 = PDonesidedPlus2nd1(B1);
  CCTK_REAL const PDonesidedMinus2nd1B1 = PDonesidedMinus2nd1(B1);
  CCTK_REAL const PDonesidedPlus2nd2B1 = PDonesidedPlus2nd2(B1);
  CCTK_REAL const PDonesidedMinus2nd2B1 = PDonesidedMinus2nd2(B1);
  CCTK_REAL const PDonesidedPlus2nd3B1 = PDonesidedPlus2nd3(B1);
  CCTK_REAL const PDonesidedMinus2nd3B1 = PDonesidedMinus2nd3(B1);
  CCTK_REAL const PDstandard2nd1B2 = PDstandard2nd1(B2);
  CCTK_REAL const PDstandard2nd2B2 = PDstandard2nd2(B2);
  CCTK_REAL const PDstandard2nd3B2 = PDstandard2nd3(B2);
  CCTK_REAL const PDonesidedPlus2nd1B2 = PDonesidedPlus2nd1(B2);
  CCTK_REAL const PDonesidedMinus2nd1B2 = PDonesidedMinus2nd1(B2);
  CCTK_REAL const PDonesidedPlus2nd2B2 = PDonesidedPlus2nd2(B2);
  CCTK_REAL const PDonesidedMinus2nd2B2 = PDonesidedMinus2nd2(B2);
  CCTK_REAL const PDonesidedPlus2nd3B2 = PDonesidedPlus2nd3(B2);
  CCTK_REAL const PDonesidedMinus2nd3B2 = PDonesidedMinus2nd3(B2);
  CCTK_REAL const PDstandard2nd1B3 = PDstandard2nd1(B3);
  CCTK_REAL const PDstandard2nd2B3 = PDstandard2nd2(B3);
  CCTK_REAL const PDstandard2nd3B3 = PDstandard2nd3(B3);
  CCTK_REAL const PDonesidedPlus2nd1B3 = PDonesidedPlus2nd1(B3);
  CCTK_REAL const PDonesidedMinus2nd1B3 = PDonesidedMinus2nd1(B3);
  CCTK_REAL const PDonesidedPlus2nd2B3 = PDonesidedPlus2nd2(B3);
  CCTK_REAL const PDonesidedMinus2nd2B3 = PDonesidedMinus2nd2(B3);
  CCTK_REAL const PDonesidedPlus2nd3B3 = PDonesidedPlus2nd3(B3);
  CCTK_REAL const PDonesidedMinus2nd3B3 = PDonesidedMinus2nd3(B3);
  CCTK_REAL const PDstandard2nd1beta1 = PDstandard2nd1(beta1);
  CCTK_REAL const PDstandard2nd2beta1 = PDstandard2nd2(beta1);
  CCTK_REAL const PDstandard2nd3beta1 = PDstandard2nd3(beta1);
  CCTK_REAL const PDonesidedPlus2nd1beta1 = PDonesidedPlus2nd1(beta1);
  CCTK_REAL const PDonesidedMinus2nd1beta1 = PDonesidedMinus2nd1(beta1);
  CCTK_REAL const PDonesidedPlus2nd2beta1 = PDonesidedPlus2nd2(beta1);
  CCTK_REAL const PDonesidedMinus2nd2beta1 = PDonesidedMinus2nd2(beta1);
  CCTK_REAL const PDonesidedPlus2nd3beta1 = PDonesidedPlus2nd3(beta1);
  CCTK_REAL const PDonesidedMinus2nd3beta1 = PDonesidedMinus2nd3(beta1);
  CCTK_REAL const PDstandard2nd1beta2 = PDstandard2nd1(beta2);
  CCTK_REAL const PDstandard2nd2beta2 = PDstandard2nd2(beta2);
  CCTK_REAL const PDstandard2nd3beta2 = PDstandard2nd3(beta2);
  CCTK_REAL const PDonesidedPlus2nd1beta2 = PDonesidedPlus2nd1(beta2);
  CCTK_REAL const PDonesidedMinus2nd1beta2 = PDonesidedMinus2nd1(beta2);
  CCTK_REAL const PDonesidedPlus2nd2beta2 = PDonesidedPlus2nd2(beta2);
  CCTK_REAL const PDonesidedMinus2nd2beta2 = PDonesidedMinus2nd2(beta2);
  CCTK_REAL const PDonesidedPlus2nd3beta2 = PDonesidedPlus2nd3(beta2);
  CCTK_REAL const PDonesidedMinus2nd3beta2 = PDonesidedMinus2nd3(beta2);
  CCTK_REAL const PDstandard2nd1beta3 = PDstandard2nd1(beta3);
  CCTK_REAL const PDstandard2nd2beta3 = PDstandard2nd2(beta3);
  CCTK_REAL const PDstandard2nd3beta3 = PDstandard2nd3(beta3);
  CCTK_REAL const PDonesidedPlus2nd1beta3 = PDonesidedPlus2nd1(beta3);
  CCTK_REAL const PDonesidedMinus2nd1beta3 = PDonesidedMinus2nd1(beta3);
  CCTK_REAL const PDonesidedPlus2nd2beta3 = PDonesidedPlus2nd2(beta3);
  CCTK_REAL const PDonesidedMinus2nd2beta3 = PDonesidedMinus2nd2(beta3);
  CCTK_REAL const PDonesidedPlus2nd3beta3 = PDonesidedPlus2nd3(beta3);
  CCTK_REAL const PDonesidedMinus2nd3beta3 = PDonesidedMinus2nd3(beta3);
  CCTK_REAL const PDstandard2nd1gt11 = PDstandard2nd1(gt11);
  CCTK_REAL const PDstandard2nd2gt11 = PDstandard2nd2(gt11);
  CCTK_REAL const PDstandard2nd3gt11 = PDstandard2nd3(gt11);
  CCTK_REAL const PDonesidedPlus2nd1gt11 = PDonesidedPlus2nd1(gt11);
  CCTK_REAL const PDonesidedMinus2nd1gt11 = PDonesidedMinus2nd1(gt11);
  CCTK_REAL const PDonesidedPlus2nd2gt11 = PDonesidedPlus2nd2(gt11);
  CCTK_REAL const PDonesidedMinus2nd2gt11 = PDonesidedMinus2nd2(gt11);
  CCTK_REAL const PDonesidedPlus2nd3gt11 = PDonesidedPlus2nd3(gt11);
  CCTK_REAL const PDonesidedMinus2nd3gt11 = PDonesidedMinus2nd3(gt11);
  CCTK_REAL const PDstandard2nd1gt12 = PDstandard2nd1(gt12);
  CCTK_REAL const PDstandard2nd2gt12 = PDstandard2nd2(gt12);
  CCTK_REAL const PDstandard2nd3gt12 = PDstandard2nd3(gt12);
  CCTK_REAL const PDonesidedPlus2nd1gt12 = PDonesidedPlus2nd1(gt12);
  CCTK_REAL const PDonesidedMinus2nd1gt12 = PDonesidedMinus2nd1(gt12);
  CCTK_REAL const PDonesidedPlus2nd2gt12 = PDonesidedPlus2nd2(gt12);
  CCTK_REAL const PDonesidedMinus2nd2gt12 = PDonesidedMinus2nd2(gt12);
  CCTK_REAL const PDonesidedPlus2nd3gt12 = PDonesidedPlus2nd3(gt12);
  CCTK_REAL const PDonesidedMinus2nd3gt12 = PDonesidedMinus2nd3(gt12);
  CCTK_REAL const PDstandard2nd1gt13 = PDstandard2nd1(gt13);
  CCTK_REAL const PDstandard2nd2gt13 = PDstandard2nd2(gt13);
  CCTK_REAL const PDstandard2nd3gt13 = PDstandard2nd3(gt13);
  CCTK_REAL const PDonesidedPlus2nd1gt13 = PDonesidedPlus2nd1(gt13);
  CCTK_REAL const PDonesidedMinus2nd1gt13 = PDonesidedMinus2nd1(gt13);
  CCTK_REAL const PDonesidedPlus2nd2gt13 = PDonesidedPlus2nd2(gt13);
  CCTK_REAL const PDonesidedMinus2nd2gt13 = PDonesidedMinus2nd2(gt13);
  CCTK_REAL const PDonesidedPlus2nd3gt13 = PDonesidedPlus2nd3(gt13);
  CCTK_REAL const PDonesidedMinus2nd3gt13 = PDonesidedMinus2nd3(gt13);
  CCTK_REAL const PDstandard2nd1gt22 = PDstandard2nd1(gt22);
  CCTK_REAL const PDstandard2nd2gt22 = PDstandard2nd2(gt22);
  CCTK_REAL const PDstandard2nd3gt22 = PDstandard2nd3(gt22);
  CCTK_REAL const PDonesidedPlus2nd1gt22 = PDonesidedPlus2nd1(gt22);
  CCTK_REAL const PDonesidedMinus2nd1gt22 = PDonesidedMinus2nd1(gt22);
  CCTK_REAL const PDonesidedPlus2nd2gt22 = PDonesidedPlus2nd2(gt22);
  CCTK_REAL const PDonesidedMinus2nd2gt22 = PDonesidedMinus2nd2(gt22);
  CCTK_REAL const PDonesidedPlus2nd3gt22 = PDonesidedPlus2nd3(gt22);
  CCTK_REAL const PDonesidedMinus2nd3gt22 = PDonesidedMinus2nd3(gt22);
  CCTK_REAL const PDstandard2nd1gt23 = PDstandard2nd1(gt23);
  CCTK_REAL const PDstandard2nd2gt23 = PDstandard2nd2(gt23);
  CCTK_REAL const PDstandard2nd3gt23 = PDstandard2nd3(gt23);
  CCTK_REAL const PDonesidedPlus2nd1gt23 = PDonesidedPlus2nd1(gt23);
  CCTK_REAL const PDonesidedMinus2nd1gt23 = PDonesidedMinus2nd1(gt23);
  CCTK_REAL const PDonesidedPlus2nd2gt23 = PDonesidedPlus2nd2(gt23);
  CCTK_REAL const PDonesidedMinus2nd2gt23 = PDonesidedMinus2nd2(gt23);
  CCTK_REAL const PDonesidedPlus2nd3gt23 = PDonesidedPlus2nd3(gt23);
  CCTK_REAL const PDonesidedMinus2nd3gt23 = PDonesidedMinus2nd3(gt23);
  CCTK_REAL const PDstandard2nd1gt33 = PDstandard2nd1(gt33);
  CCTK_REAL const PDstandard2nd2gt33 = PDstandard2nd2(gt33);
  CCTK_REAL const PDstandard2nd3gt33 = PDstandard2nd3(gt33);
  CCTK_REAL const PDonesidedPlus2nd1gt33 = PDonesidedPlus2nd1(gt33);
  CCTK_REAL const PDonesidedMinus2nd1gt33 = PDonesidedMinus2nd1(gt33);
  CCTK_REAL const PDonesidedPlus2nd2gt33 = PDonesidedPlus2nd2(gt33);
  CCTK_REAL const PDonesidedMinus2nd2gt33 = PDonesidedMinus2nd2(gt33);
  CCTK_REAL const PDonesidedPlus2nd3gt33 = PDonesidedPlus2nd3(gt33);
  CCTK_REAL const PDonesidedMinus2nd3gt33 = PDonesidedMinus2nd3(gt33);
  CCTK_REAL const PDstandard2nd1phi = PDstandard2nd1(phi);
  CCTK_REAL const PDstandard2nd2phi = PDstandard2nd2(phi);
  CCTK_REAL const PDstandard2nd3phi = PDstandard2nd3(phi);
  CCTK_REAL const PDonesidedPlus2nd1phi = PDonesidedPlus2nd1(phi);
  CCTK_REAL const PDonesidedMinus2nd1phi = PDonesidedMinus2nd1(phi);
  CCTK_REAL const PDonesidedPlus2nd2phi = PDonesidedPlus2nd2(phi);
  CCTK_REAL const PDonesidedMinus2nd2phi = PDonesidedMinus2nd2(phi);
  CCTK_REAL const PDonesidedPlus2nd3phi = PDonesidedPlus2nd3(phi);
  CCTK_REAL const PDonesidedMinus2nd3phi = PDonesidedMinus2nd3(phi);
  CCTK_REAL const PDstandard2nd1trK = PDstandard2nd1(trK);
  CCTK_REAL const PDstandard2nd2trK = PDstandard2nd2(trK);
  CCTK_REAL const PDstandard2nd3trK = PDstandard2nd3(trK);
  CCTK_REAL const PDonesidedPlus2nd1trK = PDonesidedPlus2nd1(trK);
  CCTK_REAL const PDonesidedMinus2nd1trK = PDonesidedMinus2nd1(trK);
  CCTK_REAL const PDonesidedPlus2nd2trK = PDonesidedPlus2nd2(trK);
  CCTK_REAL const PDonesidedMinus2nd2trK = PDonesidedMinus2nd2(trK);
  CCTK_REAL const PDonesidedPlus2nd3trK = PDonesidedPlus2nd3(trK);
  CCTK_REAL const PDonesidedMinus2nd3trK = PDonesidedMinus2nd3(trK);
  CCTK_REAL const PDstandard2nd1Xt1 = PDstandard2nd1(Xt1);
  CCTK_REAL const PDstandard2nd2Xt1 = PDstandard2nd2(Xt1);
  CCTK_REAL const PDstandard2nd3Xt1 = PDstandard2nd3(Xt1);
  CCTK_REAL const PDonesidedPlus2nd1Xt1 = PDonesidedPlus2nd1(Xt1);
  CCTK_REAL const PDonesidedMinus2nd1Xt1 = PDonesidedMinus2nd1(Xt1);
  CCTK_REAL const PDonesidedPlus2nd2Xt1 = PDonesidedPlus2nd2(Xt1);
  CCTK_REAL const PDonesidedMinus2nd2Xt1 = PDonesidedMinus2nd2(Xt1);
  CCTK_REAL const PDonesidedPlus2nd3Xt1 = PDonesidedPlus2nd3(Xt1);
  CCTK_REAL const PDonesidedMinus2nd3Xt1 = PDonesidedMinus2nd3(Xt1);
  CCTK_REAL const PDstandard2nd1Xt2 = PDstandard2nd1(Xt2);
  CCTK_REAL const PDstandard2nd2Xt2 = PDstandard2nd2(Xt2);
  CCTK_REAL const PDstandard2nd3Xt2 = PDstandard2nd3(Xt2);
  CCTK_REAL const PDonesidedPlus2nd1Xt2 = PDonesidedPlus2nd1(Xt2);
  CCTK_REAL const PDonesidedMinus2nd1Xt2 = PDonesidedMinus2nd1(Xt2);
  CCTK_REAL const PDonesidedPlus2nd2Xt2 = PDonesidedPlus2nd2(Xt2);
  CCTK_REAL const PDonesidedMinus2nd2Xt2 = PDonesidedMinus2nd2(Xt2);
  CCTK_REAL const PDonesidedPlus2nd3Xt2 = PDonesidedPlus2nd3(Xt2);
  CCTK_REAL const PDonesidedMinus2nd3Xt2 = PDonesidedMinus2nd3(Xt2);
  CCTK_REAL const PDstandard2nd1Xt3 = PDstandard2nd1(Xt3);
  CCTK_REAL const PDstandard2nd2Xt3 = PDstandard2nd2(Xt3);
  CCTK_REAL const PDstandard2nd3Xt3 = PDstandard2nd3(Xt3);
  CCTK_REAL const PDonesidedPlus2nd1Xt3 = PDonesidedPlus2nd1(Xt3);
  CCTK_REAL const PDonesidedMinus2nd1Xt3 = PDonesidedMinus2nd1(Xt3);
  CCTK_REAL const PDonesidedPlus2nd2Xt3 = PDonesidedPlus2nd2(Xt3);
  CCTK_REAL const PDonesidedMinus2nd2Xt3 = PDonesidedMinus2nd2(Xt3);
  CCTK_REAL const PDonesidedPlus2nd3Xt3 = PDonesidedPlus2nd3(Xt3);
  CCTK_REAL const PDonesidedMinus2nd3Xt3 = PDonesidedMinus2nd3(Xt3);
  
  /* Calculate temporaries and grid functions */
  CCTK_REAL rn1 = -(xCopyL*INV(rCopyL));
  
  CCTK_REAL rn2 = -(yCopyL*INV(rCopyL));
  
  CCTK_REAL rn3 = -(zCopyL*INV(rCopyL));
  
  CCTK_REAL phi0 = IfThen(conformalMethod,1,0);
  
  CCTK_REAL v0 = sqrt(ToReal(harmonicF));
  
  CCTK_REAL phirhsL = v0*(-phiL + phi0 + 
    rCopyL*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1phi,IfThen(bound_x > 
    0,PDonesidedMinus2nd1phi,PDstandard2nd1phi)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2phi,IfThen(bound_y > 
    0,PDonesidedMinus2nd2phi,PDstandard2nd2phi)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3phi,IfThen(bound_z > 
    0,PDonesidedMinus2nd3phi,PDstandard2nd3phi))))*INV(rCopyL);
  
  CCTK_REAL gt11rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt11,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt11,PDstandard2nd1gt11)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt11,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt11,PDstandard2nd2gt11)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt11,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt11,PDstandard2nd3gt11)) + (1 - 
    gt11L)*INV(rCopyL);
  
  CCTK_REAL gt12rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt12,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt12,PDstandard2nd1gt12)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt12,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt12,PDstandard2nd2gt12)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt12,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt12,PDstandard2nd3gt12)) - gt12L*INV(rCopyL);
  
  CCTK_REAL gt13rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt13,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt13,PDstandard2nd1gt13)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt13,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt13,PDstandard2nd2gt13)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt13,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt13,PDstandard2nd3gt13)) - gt13L*INV(rCopyL);
  
  CCTK_REAL gt22rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt22,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt22,PDstandard2nd1gt22)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt22,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt22,PDstandard2nd2gt22)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt22,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt22,PDstandard2nd3gt22)) + (1 - 
    gt22L)*INV(rCopyL);
  
  CCTK_REAL gt23rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt23,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt23,PDstandard2nd1gt23)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt23,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt23,PDstandard2nd2gt23)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt23,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt23,PDstandard2nd3gt23)) - gt23L*INV(rCopyL);
  
  CCTK_REAL gt33rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1gt33,IfThen(bound_x > 
    0,PDonesidedMinus2nd1gt33,PDstandard2nd1gt33)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2gt33,IfThen(bound_y > 
    0,PDonesidedMinus2nd2gt33,PDstandard2nd2gt33)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3gt33,IfThen(bound_z > 
    0,PDonesidedMinus2nd3gt33,PDstandard2nd3gt33)) + (1 - 
    gt33L)*INV(rCopyL);
  
  CCTK_REAL trKrhsL = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1trK,IfThen(bound_x > 
    0,PDonesidedMinus2nd1trK,PDstandard2nd1trK)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2trK,IfThen(bound_y > 
    0,PDonesidedMinus2nd2trK,PDstandard2nd2trK)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3trK,IfThen(bound_z > 
    0,PDonesidedMinus2nd3trK,PDstandard2nd3trK)) - trKL*INV(rCopyL));
  
  CCTK_REAL At11rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At11,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At11,PDstandard2nd1At11)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At11,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At11,PDstandard2nd2At11)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At11,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At11,PDstandard2nd3At11)) - At11L*INV(rCopyL);
  
  CCTK_REAL At12rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At12,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At12,PDstandard2nd1At12)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At12,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At12,PDstandard2nd2At12)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At12,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At12,PDstandard2nd3At12)) - At12L*INV(rCopyL);
  
  CCTK_REAL At13rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At13,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At13,PDstandard2nd1At13)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At13,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At13,PDstandard2nd2At13)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At13,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At13,PDstandard2nd3At13)) - At13L*INV(rCopyL);
  
  CCTK_REAL At22rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At22,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At22,PDstandard2nd1At22)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At22,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At22,PDstandard2nd2At22)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At22,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At22,PDstandard2nd3At22)) - At22L*INV(rCopyL);
  
  CCTK_REAL At23rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At23,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At23,PDstandard2nd1At23)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At23,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At23,PDstandard2nd2At23)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At23,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At23,PDstandard2nd3At23)) - At23L*INV(rCopyL);
  
  CCTK_REAL At33rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1At33,IfThen(bound_x > 
    0,PDonesidedMinus2nd1At33,PDstandard2nd1At33)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2At33,IfThen(bound_y > 
    0,PDonesidedMinus2nd2At33,PDstandard2nd2At33)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3At33,IfThen(bound_z > 
    0,PDonesidedMinus2nd3At33,PDstandard2nd3At33)) - At33L*INV(rCopyL);
  
  CCTK_REAL Xt1rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt1,PDstandard2nd1Xt1)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt1,PDstandard2nd2Xt1)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt1,PDstandard2nd3Xt1)) - Xt1L*INV(rCopyL);
  
  CCTK_REAL Xt2rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt2,PDstandard2nd1Xt2)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt2,PDstandard2nd2Xt2)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt2,PDstandard2nd3Xt2)) - Xt2L*INV(rCopyL);
  
  CCTK_REAL Xt3rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1Xt3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1Xt3,PDstandard2nd1Xt3)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2Xt3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2Xt3,PDstandard2nd2Xt3)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3Xt3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3Xt3,PDstandard2nd3Xt3)) - Xt3L*INV(rCopyL);
  
  CCTK_REAL alpharhsL = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1alpha,IfThen(bound_x > 
    0,PDonesidedMinus2nd1alpha,PDstandard2nd1alpha)) + rn2*IfThen(bound_y 
    < 0,PDonesidedPlus2nd2alpha,IfThen(bound_y > 
    0,PDonesidedMinus2nd2alpha,PDstandard2nd2alpha)) + rn3*IfThen(bound_z 
    < 0,PDonesidedPlus2nd3alpha,IfThen(bound_z > 
    0,PDonesidedMinus2nd3alpha,PDstandard2nd3alpha)) + (1 - 
    alphaL)*INV(rCopyL));
  
  CCTK_REAL ArhsL = v0*(rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1A,IfThen(bound_x > 
    0,PDonesidedMinus2nd1A,PDstandard2nd1A)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2A,IfThen(bound_y > 
    0,PDonesidedMinus2nd2A,PDstandard2nd2A)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3A,IfThen(bound_z > 
    0,PDonesidedMinus2nd3A,PDstandard2nd3A)) - AL*INV(rCopyL));
  
  CCTK_REAL beta1rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta1,PDstandard2nd1beta1)) + rn2*IfThen(bound_y 
    < 0,PDonesidedPlus2nd2beta1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta1,PDstandard2nd2beta1)) + rn3*IfThen(bound_z 
    < 0,PDonesidedPlus2nd3beta1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta1,PDstandard2nd3beta1)) - 
    beta1L*INV(rCopyL);
  
  CCTK_REAL beta2rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta2,PDstandard2nd1beta2)) + rn2*IfThen(bound_y 
    < 0,PDonesidedPlus2nd2beta2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta2,PDstandard2nd2beta2)) + rn3*IfThen(bound_z 
    < 0,PDonesidedPlus2nd3beta2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta2,PDstandard2nd3beta2)) - 
    beta2L*INV(rCopyL);
  
  CCTK_REAL beta3rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1beta3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1beta3,PDstandard2nd1beta3)) + rn2*IfThen(bound_y 
    < 0,PDonesidedPlus2nd2beta3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2beta3,PDstandard2nd2beta3)) + rn3*IfThen(bound_z 
    < 0,PDonesidedPlus2nd3beta3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3beta3,PDstandard2nd3beta3)) - 
    beta3L*INV(rCopyL);
  
  CCTK_REAL B1rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B1,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B1,PDstandard2nd1B1)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B1,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B1,PDstandard2nd2B1)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B1,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B1,PDstandard2nd3B1)) - B1L*INV(rCopyL);
  
  CCTK_REAL B2rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B2,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B2,PDstandard2nd1B2)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B2,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B2,PDstandard2nd2B2)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B2,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B2,PDstandard2nd3B2)) - B2L*INV(rCopyL);
  
  CCTK_REAL B3rhsL = rn1*IfThen(bound_x < 
    0,PDonesidedPlus2nd1B3,IfThen(bound_x > 
    0,PDonesidedMinus2nd1B3,PDstandard2nd1B3)) + rn2*IfThen(bound_y < 
    0,PDonesidedPlus2nd2B3,IfThen(bound_y > 
    0,PDonesidedMinus2nd2B3,PDstandard2nd2B3)) + rn3*IfThen(bound_z < 
    0,PDonesidedPlus2nd3B3,IfThen(bound_z > 
    0,PDonesidedMinus2nd3B3,PDstandard2nd3B3)) - B3L*INV(rCopyL);
  
  /* Copy local copies back to grid functions */
  I3D(alpharhs,0,0,0) = alpharhsL;
  I3D(Arhs,0,0,0) = ArhsL;
  I3D(At11rhs,0,0,0) = At11rhsL;
  I3D(At12rhs,0,0,0) = At12rhsL;
  I3D(At13rhs,0,0,0) = At13rhsL;
  I3D(At22rhs,0,0,0) = At22rhsL;
  I3D(At23rhs,0,0,0) = At23rhsL;
  I3D(At33rhs,0,0,0) = At33rhsL;
  I3D(B1rhs,0,0,0) = B1rhsL;
  I3D(B2rhs,0,0,0) = B2rhsL;
  I3D(B3rhs,0,0,0) = B3rhsL;
  I3D(beta1rhs,0,0,0) = beta1rhsL;
  I3D(beta2rhs,0,0,0) = beta2rhsL;
  I3D(beta3rhs,0,0,0) = beta3rhsL;
  I3D(gt11rhs,0,0,0) = gt11rhsL;
  I3D(gt12rhs,0,0,0) = gt12rhsL;
  I3D(gt13rhs,0,0,0) = gt13rhsL;
  I3D(gt22rhs,0,0,0) = gt22rhsL;
  I3D(gt23rhs,0,0,0) = gt23rhsL;
  I3D(gt33rhs,0,0,0) = gt33rhsL;
  I3D(phirhs,0,0,0) = phirhsL;
  I3D(trKrhs,0,0,0) = trKrhsL;
  I3D(Xt1rhs,0,0,0) = Xt1rhsL;
  I3D(Xt2rhs,0,0,0) = Xt2rhsL;
  I3D(Xt3rhs,0,0,0) = Xt3rhsL;
  
CAKERNEL_DEVICE_ML_BSSN_RHSRadiativeBoundary_End
