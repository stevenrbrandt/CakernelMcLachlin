# File produced by Kranc


shares: GenericFD

USES CCTK_INT stencil_width
USES CCTK_INT stencil_width_x
USES CCTK_INT stencil_width_y
USES CCTK_INT stencil_width_z
USES CCTK_INT boundary_width


shares: MethodOfLines

USES CCTK_INT MoL_Num_Evolved_Vars

restricted:
CCTK_INT verbose "verbose"
{
  *:* :: ""
} 0

restricted:
CCTK_INT ML_WaveToyFO_MaxNumEvolvedVars "Number of evolved variables used by this thorn" ACCUMULATOR-BASE=MethodofLines::MoL_Num_Evolved_Vars
{
  5:5 :: "Number of evolved variables used by this thorn"
} 5

restricted:
CCTK_INT timelevels "Number of active timelevels"
{
  0:2 :: ""
} 2

restricted:
CCTK_INT rhs_timelevels "Number of active RHS timelevels"
{
  0:2 :: ""
} 1

restricted:
CCTK_INT WTFO_Gaussian_calc_every "WTFO_Gaussian_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT WTFO_RHS_calc_every "WTFO_RHS_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT WTFO_constraints_calc_every "WTFO_constraints_calc_every"
{
  *:* :: ""
} 1

restricted:
CCTK_INT WTFO_Gaussian_calc_offset "WTFO_Gaussian_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT WTFO_RHS_calc_offset "WTFO_RHS_calc_offset"
{
  *:* :: ""
} 0

restricted:
CCTK_INT WTFO_constraints_calc_offset "WTFO_constraints_calc_offset"
{
  *:* :: ""
} 0

private:
KEYWORD rho_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD u_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD v1_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD v2_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD v3_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD WT_rho_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD WT_u_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
KEYWORD WT_v_bound "Boundary condition to implement"
{
  "flat" :: "Flat boundary condition"
  "none" :: "No boundary condition"
  "static" :: "Boundaries held fixed"
  "radiative" :: "Radiation boundary condition"
  "scalar" :: "Dirichlet boundary condition"
  "newrad" :: "Improved radiative boundary condition"
  "skip" :: "skip boundary condition code"
} "skip"

private:
CCTK_REAL rho_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL u_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL v1_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL v2_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL v3_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL WT_rho_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL WT_u_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL WT_v_bound_speed "characteristic speed at boundary"
{
  "0:*" :: "outgoing characteristic speed > 0"
} 1.

private:
CCTK_REAL rho_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL u_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL v1_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL v2_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL v3_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL WT_rho_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL WT_u_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL WT_v_bound_limit "limit value for r -> infinity"
{
  "*:*" :: "value of limit value is unrestricted"
} 0.

private:
CCTK_REAL rho_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL u_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL v1_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL v2_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL v3_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL WT_rho_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL WT_u_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

private:
CCTK_REAL WT_v_bound_scalar "Dirichlet boundary value"
{
  "*:*" :: "unrestricted"
} 0.

